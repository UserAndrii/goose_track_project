{"version":3,"file":"static/js/851.cc113b61.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { IoCheckmarkDoneCircleOutline } from 'react-icons/io5';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 100vh;\n  min-width: 100%;\n  background: #dcebf7;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormName = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.4px 57px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const InputGroupe = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 32px;\n\n  padding: 40px 24px;\n  border-radius: 8px;\n  background: #fff;\n\n  @media screen and (max-width: 375px) {\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n  }\n`;\n\nexport const InputList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  background: #fff;\n`;\n\nexport const InputWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  Input::placeholder {\n    color: #858688;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: #ffffff;\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const InputWrapperWithIcon = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  position: relative;\n  Input::placeholder {\n    color: #858688;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: #ffffff;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  gap: 10px;\n\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  cursor: pointer;\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n    padding: 14px 103px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    padding: 16px 152px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  white-space: nowrap;\n  color: #ffffff;\n  font-family: inherit;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29;\n  letter-spacing: -0.28px;\n`;\n\nexport const ItemIcon = styled(FiLogIn)`\n  width: 18px;\n  height: 18px;\n  flex-shrink: 0;\n  color: #ffffff;\n`;\n\nexport const ShowHideButton = styled.button`\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinksContainer = styled.nav`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 18px;\n  gap: 18px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 8px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  &.valid-input {\n    color: #3cbc81;\n  }\n\n  &.invalid-input {\n    color: #ff0000;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #111111;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 46px;\n  padding: 14px;\n\n  border-radius: 8px;\n  padding: 14px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: ${props =>\n    props.isPassword || props.isEmail ? '#FFFFFF' : 'none'};\n  outline: none;\n\n  &.valid-input {\n    border: 1px solid #3cbc81;\n  }\n\n  &.invalid-input {\n    border: 1px solid #ff0000;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid #111111;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    height: 54px;\n    padding: 18px;\n  }\n`;\n\nexport const Error = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-top: 8px;\n  margin-left: 18px;\n\n  &.valid {\n    color: #3cbc81;\n  }\n\n  &.invalid {\n    color: #ff0000;\n  }\n`;\n\nexport const LinkTo = styled(Link)`\n  color: #3e85f3;\n  font-size: 16px;\n  line-height: 14px;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const SuccessIcon = styled(IoCheckmarkDoneCircleOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 22px;\n  width: 18px;\n  height: 18px;\n  color: #3cbc81;\n\n  @media screen and (min-width: 768px) {\n    bottom: 27px;\n  }\n`;\n\nexport const ErrorIcon = styled(MdErrorOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 37px;\n  width: 18px;\n  height: 18px;\n  color: #ff0000;\n\n  @media screen and (min-width: 768px) {\n    bottom: 41px;\n  }\n`;\n\nexport const ContainerErrorIcon = styled.div`\n  position: relative;\n`;\n\nexport const PictureWrapper = styled.div`\n  display: ${props => (props.hide ? 'block' : 'none')};\n  position: absolute;\n  bottom: 0;\n  left: 49px;\n\n  width: 400px;\n  height: 416px;\n\n  @media screen and (min-width: 1440px) {\n    display: ${props => (props.hide ? 'none' : 'block')};\n  }\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Container,\n  StyledForm,\n  InputGroupe,\n  LinksContainer,\n  FormName,\n  InputWrapper,\n  Button,\n  ButtonText,\n  ItemIcon,\n  Label,\n  Input,\n  ShowHideButton,\n  InputWrapperWithIcon,\n  InputList,\n  Error,\n  ErrorIcon,\n  ContainerErrorIcon,\n  PictureWrapper,\n  SuccessIcon,\n} from './RegisterForm.styled';\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\n\nimport registerElements from 'images/signup-elements.png';\nimport registerElementsRetina from 'images/signup-elements@2x.png';\nimport AuthNavigate from 'components/AuthNavigate/AuthNavigate';\nimport ImageAnimation from 'components/Bandero-goose/ImageAnimation';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showAnimation, setShowAnimation] = useState(false);\n\n  const emailRegexp =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\n\n  const validationSchema = yup.object({\n    name: yup\n      .string()\n      .min(3, 'Name must be at least 3 characters')\n      .required('This field is required'),\n    email: yup\n      .string()\n      .matches(emailRegexp, 'Invalid email')\n      .required('This field is required'),\n    password: yup\n      .string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('This field is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = {\n          userName: values.name,\n          email: values.email,\n          password: values.password,\n        };\n\n        setShowAnimation(true);\n\n        setTimeout(() => {\n          setShowAnimation(false);\n        }, 3000);\n\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        const response = await dispatch(register(formData));\n        if (response.payload.message === 'success') {\n          formik.resetForm();\n          navigate('/calendar');\n        }\n        return response;\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <Container style={{ display: showAnimation ? 'none' : 'flex' }}>\n        <StyledForm onSubmit={formik.handleSubmit}>\n          <InputGroupe>\n            <FormName>Sign Up</FormName>\n            <InputList>\n              <InputWrapper>\n                <Label\n                  htmlFor=\"userName\"\n                  className={\n                    formik.touched.name\n                      ? formik.errors.name\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  Name\n                </Label>\n                <Input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  autoComplete=\"true\"\n                  value={formik.values.name}\n                  placeholder=\"Enter your name\"\n                  onBlur={formik.handleBlur}\n                  onChange={formik.handleChange}\n                  className={\n                    formik.touched.name\n                      ? formik.errors.name\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                />\n                {formik.touched.name ? (\n                  formik.errors.name ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">{formik.errors.name}</Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.name}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n              <InputWrapper isEmail={'email'}>\n                <Label\n                  htmlFor=\"email\"\n                  className={\n                    formik.touched.email\n                      ? formik.errors.email\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  Email\n                </Label>\n                <Input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  autoComplete=\"true\"\n                  value={formik.values.email}\n                  placeholder=\"Enter email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  className={\n                    formik.touched.email\n                      ? formik.errors.email\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                />\n                {formik.touched.email ? (\n                  formik.errors.email ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">{formik.errors.email}</Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.email}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n              <InputWrapper isPassword={'password'}>\n                <Label\n                  htmlFor=\"password\"\n                  className={\n                    formik.touched.password\n                      ? formik.errors.password\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  Password\n                </Label>\n                <InputWrapperWithIcon>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    placeholder=\"Enter password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    className={\n                      formik.touched.password\n                        ? formik.errors.password\n                          ? 'invalid-input'\n                          : 'valid-input'\n                        : ''\n                    }\n                  />\n                  {!formik.errors.password && (\n                    <ShowHideButton\n                      type=\"button\"\n                      onClick={() => setShowPassword(show => !show)}\n                    >\n                      {showPassword ? <FiEyeOff /> : <FiEye />}\n                    </ShowHideButton>\n                  )}\n                </InputWrapperWithIcon>\n                {formik.touched.password ? (\n                  formik.errors.password ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">\n                        {formik.errors.password}\n                      </Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.password}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n            </InputList>\n            <Button type=\"submit\">\n              <ButtonText>Sign Up</ButtonText>\n              <ItemIcon />\n            </Button>\n          </InputGroupe>\n          <LinksContainer>\n            <AuthNavigate\n              forgotPasswordLink=\"/\"\n              alreadyRegisteredLink=\"/login\"\n            />\n          </LinksContainer>\n        </StyledForm>\n        <PictureWrapper>\n          <picture>\n            <source\n              type=\"image/png\"\n              media=\"(min-width: 1440px)\"\n              srcSet={`${registerElements} 1x, ${registerElementsRetina} 2x`}\n            />\n            <img\n              src={`${registerElements}`}\n              alt=\"Let go of the past and focus on the present\"\n              width={400}\n              height={416}\n            />\n          </picture>\n        </PictureWrapper>\n      </Container>\n\n      {showAnimation && (\n        <Container>\n          <ImageAnimation\n            style={{\n              position: 'absolute',\n              width: '100px',\n              height: '100px',\n              left: '50%',\n              top: '50%',\n              transform: 'translate(-50%, -50%)',\n            }}\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/RegisterForm'; // Зараз ви можете імпортувати звідси\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","FormName","_templateObject3","InputGroupe","_templateObject4","InputList","_templateObject5","InputWrapper","_templateObject6","InputWrapperWithIcon","_templateObject7","Button","_templateObject8","ButtonText","_templateObject9","ItemIcon","FiLogIn","_templateObject10","ShowHideButton","_templateObject11","LinksContainer","_templateObject12","Label","_templateObject13","Input","_templateObject14","props","isPassword","isEmail","Error","_templateObject15","SuccessIcon","Link","_templateObject16","IoCheckmarkDoneCircleOutline","_templateObject17","ErrorIcon","MdErrorOutline","_templateObject18","ContainerErrorIcon","_templateObject19","PictureWrapper","_templateObject20","hide","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showAnimation","setShowAnimation","validationSchema","yup","name","min","required","email","matches","password","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","response","wrap","_context","prev","next","userName","setTimeout","Promise","resolve","register","sent","payload","message","resetForm","abrupt","t0","console","error","stop","_x","apply","arguments","_jsxs","_Fragment","children","style","display","handleSubmit","_jsx","htmlFor","className","touched","errors","type","id","autoComplete","value","placeholder","onBlur","handleBlur","onChange","handleChange","onClick","show","FiEyeOff","FiEye","AuthNavigate","forgotPasswordLink","alreadyRegisteredLink","media","srcSet","concat","registerElements","registerElementsRetina","src","alt","width","height","ImageAnimation","position","left","top","transform","RegisterForm"],"sourceRoot":""}