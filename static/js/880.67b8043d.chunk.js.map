{"version":3,"file":"static/js/880.67b8043d.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const ContainerWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px 32px 32px;\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  padding: 60px 0;\n  background-color: #ffffff;\n  border-radius: 16px;\n  text-align: center;\n  position: relative;\n`;\n\nexport const UserName = styled.h1`\n  color: #343434;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n  margin-bottom: 18px;\n\n  background-color: #ffffff;\n  border-radius: 50%;\n  border: 1px solid rgb(47, 103, 228);\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -31px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const IconContainer = styled(AiFillPlusCircle)`\n  position: absolute;\n  bottom: -3px;\n  right: 12px;\n  background-color: #ffffff;\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  color: rgb(47, 103, 228);\n  border: none;\n  cursor: pointer;\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n  }\n\n  @media screen and (min-width: 768px) {\n    right: 23px;\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #343434;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Letter = styled.p`\n  color: #3e85f3;\n  font-weight: 700;\n  font-size: 33px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    font-size: 50px;\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 768px) {\n    gap: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    align-items: start;\n    justify-items: center;\n\n    flex: 1;\n\n    grid-column-gap: 50px;\n    /* grid-row-gap: auto; */\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px) {\n      gap: 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      gap: 24px;\n    }\n  }\n\n  & > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #343434;\n    outline: none;\n\n    &::placeholder {\n      color: #343434;\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 271px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > label > p {\n    color: #111111;\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  max-width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  padding: 14px 50px;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 17px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 40px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  &:disabled {\n    background-color: #e0e0e0;\n    cursor: default;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: auto;\n    grid-column: span 2;\n  }\n`;\n\nexport const CustomInput = styled.input`\n  width: 100%;\n  height: 42px;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  padding: 12px 14px;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 600;\n  color: #343434;\n  outline: none;\n\n  &::placeholder {\n    color: #343434;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    width: 271px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport {\n  ContainerWrapper,\n  Container,\n  UserName,\n  Image,\n  ImageContainer,\n  IconContainer,\n  Text,\n  Forma,\n  Letter,\n  Button,\n  CustomInput,\n} from './UserForm.styled';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/auth/operations';\nimport { format, parse } from 'date-fns';\n\nconst UserForm = () => {\n  const user = useSelector(selectUser);\n\n  const [startDate, setStartDate] = useState(\n    parse(user.birthDay, 'dd/MM/yyyy', new Date()) ?? new Date()\n  );\n\n  const [newUserName, setNewUserName] = useState(user.userName ?? '');\n  const [newEmail, setNewEmail] = useState(user.email ?? '');\n  const [newPhone, setNewPhone] = useState(user.phone ?? '');\n  const [newSkype, setNewSkype] = useState(user.skype ?? '');\n  const [avatarURL, setAvatar] = useState(user.avatarURL ?? '');\n  const [avatarPreviewUrl, setAvatarPreviewUrl] = useState('');\n\n  const dispatch = useDispatch();\n  const avatarInputRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      if (avatarPreviewUrl) {\n        URL.revokeObjectURL(avatarPreviewUrl);\n      }\n    };\n  }, [avatarPreviewUrl]);\n\n  if (!user.userName) {\n    return;\n  }\n\n  const firstName = user?.userName?.split(' ')[0];\n  const firstLetter = firstName[0]?.toUpperCase();\n\n  const handleIconContainerClick = () => {\n    if (avatarInputRef.current) {\n      avatarInputRef.current.click();\n    }\n  };\n\n  const handleIconOnClick = e => {\n    const file = e.target.files[0];\n    setAvatar(file);\n\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setAvatarPreviewUrl(previewUrl);\n    } else {\n      setAvatarPreviewUrl(user.avatarURL);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    formData.append('birthDay', format(startDate, 'dd/MM/yyyy'));\n    console.log(avatarURL);\n\n    dispatch(updateUser(formData));\n  };\n\n  return (\n    <ContainerWrapper>\n      <Container>\n        <Forma onSubmit={handleSubmit}>\n          <ImageContainer>\n            {avatarPreviewUrl ? (\n              <Image src={avatarPreviewUrl} alt={user.userName} />\n            ) : user.avatarURL ? (\n              <Image src={user.avatarURL} alt={user.userName} />\n            ) : (\n              <Letter>{firstLetter}</Letter>\n            )}\n            <IconContainer onClick={handleIconContainerClick} />\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              ref={avatarInputRef}\n              onChange={handleIconOnClick}\n              style={{ display: 'none' }}\n              name=\"avatar\"\n            />\n          </ImageContainer>\n\n          <UserName>{user.userName}</UserName>\n          <Text>User</Text>\n          <div>\n            <label>\n              <p>User Name</p>\n              <input\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Add a username\"\n                value={newUserName}\n                onChange={e => setNewUserName(e.target.value)}\n              />\n            </label>\n            <label>\n              <p>Birthday</p>\n              <DatePicker\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                customInput={\n                  <CustomInput\n                    type=\"text\"\n                    name=\"birthDay\"\n                    placeholder=\"Add a birthday\"\n                    value={startDate.toString()}\n                    // onChange={e => setStartDate(e.target.value)}\n                  />\n                }\n              />\n              {/* <DatePicker\n                selected={startDate}\n                onChange={event => setStartDate(event)}\n                customInput={<input type=\"text\" placeholder=\"aaaa\" />}\n              /> */}\n            </label>\n            <label>\n              <p>Email</p>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Add an email\"\n                value={newEmail}\n                onChange={e => setNewEmail(e.target.value)}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              <p>Phone</p>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"Add a phone number\"\n                value={newPhone}\n                onChange={e => setNewPhone(e.target.value)}\n              />\n            </label>\n            <label>\n              <p>Skype</p>\n              <input\n                type=\"text\"\n                name=\"skype\"\n                placeholder=\"Add a skype number\"\n                value={newSkype}\n                onChange={e => setNewSkype(e.target.value)}\n              />\n            </label>\n          </div>\n          <Button type=\"submit\">Save changes</Button>\n        </Forma>\n      </Container>\n    </ContainerWrapper>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["ContainerWrapper","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","UserName","_templateObject3","Image","_templateObject4","ImageContainer","_templateObject5","IconContainer","AiFillPlusCircle","_templateObject6","Text","_templateObject7","Letter","_templateObject8","Forma","_templateObject9","Button","_templateObject10","CustomInput","_templateObject11","_parse","_user$userName","_user$email","_user$phone","_user$skype","_user$avatarURL","_user$userName2","_firstName$","user","useSelector","selectUser","_useState","useState","parse","birthDay","Date","_useState2","_slicedToArray","startDate","setStartDate","_useState3","userName","_useState4","newUserName","setNewUserName","_useState5","email","_useState6","newEmail","setNewEmail","_useState7","phone","_useState8","newPhone","setNewPhone","_useState9","skype","_useState10","newSkype","setNewSkype","_useState11","avatarURL","_useState12","setAvatar","_useState13","_useState14","avatarPreviewUrl","setAvatarPreviewUrl","dispatch","useDispatch","avatarInputRef","useRef","useEffect","URL","revokeObjectURL","firstLetter","split","toUpperCase","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","target","append","format","console","log","updateUser","stop","_x","apply","arguments","_jsx","children","_jsxs","onSubmit","src","alt","onClick","current","click","type","accept","ref","onChange","e","file","files","previewUrl","createObjectURL","style","display","name","placeholder","value","DatePicker","selected","date","customInput","toString","UserForm"],"sourceRoot":""}