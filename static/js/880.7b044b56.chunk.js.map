{"version":3,"file":"static/js/880.7b044b56.chunk.js","mappings":"yQAGaA,EAAmBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HAQ7BC,EAAYH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gQActBG,EAAWL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iNAapBK,EAAQP,EAAAA,EAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gLAYlBO,EAAiBT,EAAAA,EAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kgBA4B3BS,GAAgBX,EAAAA,EAAAA,GAAOY,EAAAA,IAAPZ,CAAwBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,+cAwBxCY,EAAOd,EAAAA,EAAAA,EAAQe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2LAYfc,EAAShB,EAAAA,EAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,mKAWjBgB,EAAQlB,EAAAA,EAAAA,KAAWmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,w9CAgFnBkB,EAASpB,EAAAA,EAAAA,OAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,mnBAoCtBoB,EAActB,EAAAA,EAAAA,MAAYuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,ggB,2EC5GvC,EA9GiB,WAAO,IAADsB,EACrBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/CK,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAsCN,EAAAA,EAAAA,UAAS,IAAGO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsCV,EAAAA,EAAAA,UAAS,IAAIC,MAAOU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgClB,EAAAA,EAAAA,UAAS,IAAGmB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCtB,EAAAA,EAAAA,UAAS,IAAGuB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAGXC,EAA0B,QAAfjC,EADC4B,EAAKM,SAASC,MAAM,KAAK,GACb,UAAE,IAAAnC,OAAA,EAAZA,EAAcoC,cAgBlC,OACEC,EAAAA,EAAAA,KAAC9D,EAAgB,CAAA+D,UACfC,EAAAA,EAAAA,MAAC5D,EAAS,CAAA2D,SAAA,EACRC,EAAAA,EAAAA,MAACtD,EAAc,CAAAqD,SAAA,CACZV,EAAKY,WACJH,EAAAA,EAAAA,KAACtD,EAAK,CAAC0D,IAAKb,EAAKY,UAAWE,IAAKd,EAAKM,YAEtCG,EAAAA,EAAAA,KAAC7C,EAAM,CAAA8C,SAAEL,KAEXI,EAAAA,EAAAA,KAAClD,EAAa,QAGhBkD,EAAAA,EAAAA,KAACxD,EAAQ,CAAAyD,SAAEV,EAAKM,YAChBG,EAAAA,EAAAA,KAAC/C,EAAI,CAAAgD,SAAC,UACNC,EAAAA,EAAAA,MAAC7C,EAAK,CAACiD,SA5BQ,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBZ,SAAUxB,GAAekB,EAAKM,SAC9Ba,SAAUjC,EACVkC,MAAO9B,GAAYU,EAAKoB,MACxBC,MAAO3B,GAAYM,EAAKqB,MACxBC,MAAOxB,GAAYE,EAAKsB,OAG1BnB,GAASoB,EAAAA,EAAAA,IAAWL,GACtB,EAgBoCR,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eACHD,EAAAA,EAAAA,KAAA,SACEe,KAAK,OACLC,KAAK,WACLC,YAAa1B,EAAKM,SAClBqB,MAAO7C,EACP8C,SAAU,SAAAC,GAAC,OAAI9C,EAAe8C,EAAEC,OAAOH,MAAM,QAGjDhB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cACHD,EAAAA,EAAAA,KAACsB,IAAU,CACTC,SAAUtD,EACVkD,SAAU,SAAAK,GAAI,OAAItD,EAAasD,EAAK,EACpCC,aACEzB,EAAAA,EAAAA,KAACvC,EAAW,CACVsD,KAAK,OACLC,KAAK,WACLC,YAAa1B,EAAKmB,SAClBQ,MAAOzC,EACP0C,SAAU,SAAAC,GAAC,OAAI1C,EAAe0C,EAAEC,OAAOH,MAAM,UAKrDhB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WACHD,EAAAA,EAAAA,KAAA,SACEe,KAAK,OACLC,KAAK,QACLC,YAAa1B,EAAKoB,MAClBO,MAAOrC,EACPsC,SAAU,SAAAC,GAAC,OAAItC,EAAYsC,EAAEC,OAAOH,MAAM,WAIhDhB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WACHD,EAAAA,EAAAA,KAAA,SACEe,KAAK,OACLC,KAAK,QACLC,YAAa1B,EAAKqB,MAAQrB,EAAKqB,MAAQ,qBACvCM,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAIlC,EAAYkC,EAAEC,OAAOH,MAAM,QAG9ChB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WACHD,EAAAA,EAAAA,KAAA,SACEe,KAAK,OACLC,KAAK,QACLC,YAAa1B,EAAKsB,MAAQtB,EAAKsB,MAAQ,qBACvCK,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAY8B,EAAEC,OAAOH,MAAM,WAIhDlB,EAAAA,EAAAA,KAACzC,EAAM,CAACwD,KAAK,SAAQd,SAAC,wBAKhC,EC7HA,EAJoB,WAClB,OAAOD,EAAAA,EAAAA,KAAC0B,EAAQ,GAClB,C","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const ContainerWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 32px 32px 32px;\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  padding: 60px 0;\n  background-color: #ffffff;\n  border-radius: 16px;\n  text-align: center;\n  position: relative;\n`;\n\nexport const UserName = styled.h1`\n  color: #343434;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n  margin-bottom: 18px;\n\n  background-color: #ffffff;\n  border-radius: 50%;\n  border: 1px solid rgb(47, 103, 228);\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -31px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const IconContainer = styled(AiFillPlusCircle)`\n  position: absolute;\n  bottom: -3px;\n  right: 12px;\n  background-color: #ffffff;\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  color: rgb(47, 103, 228);\n  border: none;\n  cursor: pointer;\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n  }\n\n  @media screen and (min-width: 768px) {\n    right: 23px;\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #343434;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Letter = styled.p`\n  color: #3e85f3;\n  font-weight: 700;\n  font-size: 33px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    font-size: 50px;\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 768px) {\n    gap: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    align-items: start;\n    justify-items: start;\n    flex: 1;\n\n    grid-column-gap: 50px;\n    grid-row-gap: auto;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px) {\n      gap: 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      gap: 24px;\n    }\n  }\n\n  & > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #343434;\n    outline: none;\n\n    &::placeholder {\n      color: #343434;\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 271px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > label > p {\n    color: #111111;\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  max-width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  padding: 14px 50px;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 17px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 40px;\n\n  &:hover,\n  &:focus {\n    background-color: #3cbc81;\n  }\n  &:disabled {\n    background-color: #e0e0e0;\n    cursor: default;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: auto;\n    grid-column: span 2;\n  }\n`;\n\nexport const CustomInput = styled.input`\n  width: 100%;\n  height: 42px;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  padding: 12px 14px;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 600;\n  color: #343434;\n  outline: none;\n\n  &::placeholder {\n    color: #343434;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    width: 271px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  ContainerWrapper,\n  Container,\n  UserName,\n  Image,\n  ImageContainer,\n  IconContainer,\n  Text,\n  Forma,\n  Letter,\n  Button,\n  CustomInput,\n} from './UserForm.styled';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/auth/operations';\n\nconst UserForm = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [newUserName, setNewUserName] = useState('');\n  const [newBirthday, setNewBirthday] = useState(new Date());\n  const [newEmail, setNewEmail] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newSkype, setNewSkype] = useState('');\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const firstName = user.userName.split(' ')[0];\n  const firstLetter = firstName[0]?.toUpperCase();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const updatedUser = {\n      userName: newUserName || user.userName,\n      birthDay: newBirthday,\n      email: newEmail || user.email,\n      phone: newPhone || user.phone,\n      skype: newSkype || user.skype,\n    };\n\n    dispatch(updateUser(updatedUser));\n  };\n\n  return (\n    <ContainerWrapper>\n      <Container>\n        <ImageContainer>\n          {user.avatarURL ? (\n            <Image src={user.avatarURL} alt={user.userName} />\n          ) : (\n            <Letter>{firstLetter}</Letter>\n          )}\n          <IconContainer />\n        </ImageContainer>\n\n        <UserName>{user.userName}</UserName>\n        <Text>User</Text>\n        <Forma onSubmit={handleSubmit}>\n          <div>\n            <label>\n              <p>User Name</p>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder={user.userName}\n                value={newUserName}\n                onChange={e => setNewUserName(e.target.value)}\n              />\n            </label>\n            <label>\n              <p>Birthday</p>\n              <DatePicker\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                customInput={\n                  <CustomInput\n                    type=\"text\"\n                    name=\"birthday\"\n                    placeholder={user.birthDay}\n                    value={newBirthday}\n                    onChange={e => setNewBirthday(e.target.value)}\n                  />\n                }\n              />\n            </label>\n            <label>\n              <p>Email</p>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder={user.email}\n                value={newEmail}\n                onChange={e => setNewEmail(e.target.value)}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              <p>Phone</p>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                placeholder={user.phone ? user.phone : '38 (000) 000 00 00'}\n                value={newPhone}\n                onChange={e => setNewPhone(e.target.value)}\n              />\n            </label>\n            <label>\n              <p>Skype</p>\n              <input\n                type=\"text\"\n                name=\"skype\"\n                placeholder={user.skype ? user.skype : 'Add a skype number'}\n                value={newSkype}\n                onChange={e => setNewSkype(e.target.value)}\n              />\n            </label>\n          </div>\n          <Button type=\"submit\">Save changes</Button>\n        </Forma>\n      </Container>\n    </ContainerWrapper>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["ContainerWrapper","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","UserName","_templateObject3","Image","_templateObject4","ImageContainer","_templateObject5","IconContainer","AiFillPlusCircle","_templateObject6","Text","_templateObject7","Letter","_templateObject8","Forma","_templateObject9","Button","_templateObject10","CustomInput","_templateObject11","_firstName$","_useState","useState","Date","_useState2","_slicedToArray","startDate","setStartDate","_useState3","_useState4","newUserName","setNewUserName","_useState5","_useState6","newBirthday","setNewBirthday","_useState7","_useState8","newEmail","setNewEmail","_useState9","_useState10","newPhone","setNewPhone","_useState11","_useState12","newSkype","setNewSkype","user","useSelector","selectUser","dispatch","useDispatch","firstLetter","userName","split","toUpperCase","_jsx","children","_jsxs","avatarURL","src","alt","onSubmit","event","preventDefault","updatedUser","birthDay","email","phone","skype","updateUser","type","name","placeholder","value","onChange","e","target","DatePicker","selected","date","customInput","UserForm"],"sourceRoot":""}