{"version":3,"file":"static/js/275.5dcc40a8.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/PasswordRecoveryForm/PasswordRecoveryForm.styled.jsx","components/PasswordRecoveryForm/PasswordRecoveryForm.jsx","components/AddPasswordRecoveryModal/AddPasswordRecoveryModal.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const ContainerWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding: 60px 10px 40px;\n  background-color: var(--main-background-color);\n\n  border-radius: 16px;\n  text-align: center;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    /* padding: 60px 0; */\n    height: 100%;\n  }\n`;\n\nexport const UserName = styled.h2`\n  color: var(--calendar-date-color);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n  margin-bottom: 18px;\n\n  background-color: var(--main-background-color);\n  border-radius: 50%;\n  border: 1px solid rgb(47, 103, 228);\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -31px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const IconContainer = styled(AiFillPlusCircle)`\n  position: absolute;\n  bottom: -3px;\n  right: 12px;\n  background-color: var(--main-background-color);\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  color: rgb(47, 103, 228);\n  border: none;\n  cursor: pointer;\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n    right: 18px;\n    bottom: -4px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    align-items: start;\n    justify-items: center;\n    flex: 1;\n\n    grid-column-gap: 50px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: var(--calendar-date-color);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Letter = styled.p`\n  color: var(--accent-color);\n  font-weight: 700;\n  font-size: 33px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    font-size: 50px;\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  & > div > div {\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px) {\n      gap: 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      gap: 24px;\n    }\n  }\n\n  & > div > div:nth-of-type(1) {\n    margin-bottom: 18px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n\n  & > div > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: var(--calendar-date-color);\n    outline: none;\n    background-color: inherit;\n\n    &::placeholder {\n      color: var(--calendar-date-color);\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > div > label > p {\n    color: var(--title-text-main-color);\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n\n  & > div > div > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > div > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: var(--calendar-date-color);\n    outline: none;\n    background-color: inherit;\n\n    &::placeholder {\n      color: var(--calendar-date-color);\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > div > div > label > p {\n    color: var(--label-text-color);\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const VerifyWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 5px;\n`;\n\nexport const VerifyText = styled.p`\n  text-align: left;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: ${props => (props.verify ? '#008000' : '#f94646')};\n  margin-top: ${props => (props.verify ? '10px' : '0')};\n`;\n\nexport const VerifyBtn = styled.button`\n  color: var(--btn-text-color);\n  background: var(--accent-background-color);\n  padding: 3px 10px;\n\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 1.2;\n  cursor: pointer;\n\n  border: none;\n  border-radius: 7px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: var(--active-btn-color);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 3px 15px;\n  }\n`;\n\nexport const Button = styled.button`\n  max-width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  background: var(--accent-background-color);\n  border: none;\n  padding: 14px 50px;\n  color: var(--btn-text-color);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 17px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 40px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: var(--active-btn-color);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  &:disabled {\n    background-color: var(--outlet-background-color);\n    cursor: not-allowed;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: auto;\n    grid-column: span 2;\n  }\n`;\n\nexport const CustomInput = styled.input`\n  width: 100%;\n  height: 42px;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  padding: 12px 14px;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 600;\n  color: var(--calendar-date-color);\n  outline: none;\n  background-color: inherit;\n\n  &::placeholder {\n    color: var(--modal-input-lable-color);\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 400;\n  }\n\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n  }\n`;\n\nexport const ChangePasswordBtn = styled.button`\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 600;\n\n  color: var(--calendar-date-color);\n  cursor: pointer;\n  padding: 12px 20px;\n\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  background-color: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: var(--btn-text-color);\n    background: var(--active-btn-color);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 13px;\n    font-size: 14px;\n    line-height: 1.28;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 22px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { IoCheckmarkDoneCircleOutline } from 'react-icons/io5';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: inherit;\n`;\n\nexport const FormName = styled.h1`\n  color: var(--accent-color);\n  text-shadow: 0px 9.4px 57px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const InputGroupe = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 32px;\n\n  border-radius: 8px;\n  background: var(--main-background-color);\n  background-color: inherit;\n`;\n\nexport const InputList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  background: inherit;\n`;\n\nexport const InputWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    color: var(--title-text-main-color);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n  }\n\n  Input::placeholder {\n    color: var(--secondary-text-color);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: var(--main-background-color);\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const InputWrapperWithIcon = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  position: relative;\n  background: inherit;\n\n  input {\n    color: var(--title-text-main-color);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n  }\n\n  Input::placeholder {\n    color: var(--secondary-text-color);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  gap: 10px;\n\n  border: none;\n  border-radius: 16px;\n  background: var(--accent-background-color);\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n    padding: 14px 103px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    padding: 16px 152px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  white-space: nowrap;\n  color: var(--btn-text-color);\n  font-family: inherit;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29;\n  letter-spacing: -0.28px;\n`;\n\nexport const ItemIcon = styled(FiLogIn)`\n  width: 18px;\n  height: 18px;\n  flex-shrink: 0;\n  color: var(--btn-text-color);\n`;\n\nexport const ShowHideButton = styled.button`\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  color: var(--title-text-main-color);\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 8px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  color: var(--title-text-main-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  &.valid-input {\n    color: #3cbc81;\n  }\n\n  &.invalid-input {\n    color: #ff0000;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: var(--title-text-main-color);\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 46px;\n  padding: 14px;\n\n  border-radius: 8px;\n  padding: 14px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: inherit;\n  outline: none;\n\n  &.valid-input {\n    border: 1px solid #3cbc81;\n  }\n\n  &.invalid-input {\n    border: 1px solid #ff0000;\n  }\n\n  &::placeholder {\n    color: var(--modal-input-lable-color);\n    font-size: 12px;\n    font-weight: 600;\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid var(--title-text-main-color);\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    height: 54px;\n    padding: 18px;\n  }\n`;\n\nexport const Error = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-top: 8px;\n  margin-left: 18px;\n\n  &.valid {\n    color: #3cbc81;\n  }\n\n  &.invalid {\n    color: #ff0000;\n  }\n`;\n\nexport const LinkTo = styled(Link)`\n  color: var(--accent-color);\n  font-size: 16px;\n  line-height: 14px;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const SuccessIcon = styled(IoCheckmarkDoneCircleOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 22px;\n  width: 18px;\n  height: 18px;\n  color: #3cbc81;\n\n  @media screen and (min-width: 768px) {\n    bottom: 27px;\n  }\n`;\n\nexport const ErrorIcon = styled(MdErrorOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 37px;\n  width: 18px;\n  height: 18px;\n  color: #ff0000;\n\n  @media screen and (min-width: 768px) {\n    bottom: 41px;\n  }\n`;\n\nexport const ContainerErrorIcon = styled.div`\n  position: relative;\n`;\n","import { useTranslation, Trans } from 'react-i18next';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  StyledForm,\n  InputGroupe,\n  FormName,\n  InputWrapper,\n  Button,\n  ButtonText,\n  ItemIcon,\n  Label,\n  Input,\n  ShowHideButton,\n  InputWrapperWithIcon,\n  InputList,\n  Error,\n  ErrorIcon,\n  ContainerErrorIcon,\n  SuccessIcon,\n} from './PasswordRecoveryForm.styled';\n\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changePassword } from 'redux/auth/operations';\nimport { showErrorToast } from 'utils/showToast';\n\nconst PasswordRecoveryForm = ({ onClose }) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validationSchema = yup.object({\n    oldpassword: yup\n      .string()\n      .min(6, t('recovery.err3'))\n      .required(t('recovery.err2')),\n\n    newpassword: yup\n      .string()\n      .min(6, t('recovery.err3'))\n      .required(t('recovery.err2')),\n\n    newpassword2: yup\n      .string()\n      .min(6, t('recovery.err3'))\n      .required(t('recovery.err2')),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      oldpassword: '',\n      newpassword: '',\n      newpassword2: '',\n    },\n    validationSchema: validationSchema,\n\n    onSubmit: async values => {\n      if (values.newpassword !== values.newpassword2) {\n        showErrorToast(t('recovery.err4'));\n        return;\n      }\n\n      try {\n        const formData = {\n          oldPassword: values.oldpassword,\n          newPassword: values.newpassword,\n        };\n\n        onClose();\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const response = await dispatch(changePassword(formData));\n        return response;\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <InputGroupe>\n        <FormName>\n          <Trans i18nKey=\"recovery.update\">Update password</Trans>\n        </FormName>\n        <InputList>\n          <InputWrapper isPassword={'oldpassword'}>\n            <Label\n              htmlFor=\"oldpassword\"\n              className={\n                formik.touched.oldpassword\n                  ? formik.errors.oldpassword\n                    ? 'invalid-input'\n                    : 'valid-input'\n                  : ''\n              }\n            >\n              {t('recovery.old')}\n            </Label>\n            <InputWrapperWithIcon>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"oldpassword\"\n                name=\"oldpassword\"\n                value={formik.values.oldpassword}\n                placeholder={t('recovery.passhold')}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.touched.oldpassword\n                    ? formik.errors.oldpassword\n                      ? 'invalid-input'\n                      : 'valid-input'\n                    : ''\n                }\n              />\n              {!formik.errors.oldpassword && (\n                <ShowHideButton\n                  type=\"button\"\n                  onClick={() => setShowPassword(show => !show)}\n                >\n                  {showPassword ? (\n                    <FiEyeOff style={{ color: 'inherit' }} />\n                  ) : (\n                    <FiEye style={{ color: 'inherit' }} />\n                  )}\n                </ShowHideButton>\n              )}\n            </InputWrapperWithIcon>\n            {formik.touched.oldpassword ? (\n              formik.errors.oldpassword ? (\n                <ContainerErrorIcon>\n                  <Error className=\"invalid\">{formik.errors.oldpassword}</Error>\n                  <ErrorIcon />\n                </ContainerErrorIcon>\n              ) : (\n                <ContainerErrorIcon>\n                  <Error className=\"valid\">{formik.errors.oldpassword}</Error>\n                  <SuccessIcon />\n                </ContainerErrorIcon>\n              )\n            ) : null}\n          </InputWrapper>\n\n          <InputWrapper isPassword={'newpassword'}>\n            <Label\n              htmlFor=\"newpassword\"\n              className={\n                formik.touched.newpassword\n                  ? formik.errors.newpassword\n                    ? 'invalid-input'\n                    : 'valid-input'\n                  : ''\n              }\n            >\n              {t('recovery.new')}\n            </Label>\n            <InputWrapperWithIcon>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"newpassword\"\n                name=\"newpassword\"\n                value={formik.values.newpassword}\n                placeholder={t('recovery.passhold')}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.touched.newpassword\n                    ? formik.errors.newpassword\n                      ? 'invalid-input'\n                      : 'valid-input'\n                    : ''\n                }\n              />\n              {!formik.errors.newpassword && (\n                <ShowHideButton\n                  type=\"button\"\n                  onClick={() => setShowPassword(show => !show)}\n                >\n                  {showPassword ? <FiEyeOff /> : <FiEye />}\n                </ShowHideButton>\n              )}\n            </InputWrapperWithIcon>\n            {formik.touched.newpassword ? (\n              formik.errors.newpassword ? (\n                <ContainerErrorIcon>\n                  <Error className=\"invalid\">{formik.errors.newpassword}</Error>\n                  <ErrorIcon />\n                </ContainerErrorIcon>\n              ) : (\n                <ContainerErrorIcon>\n                  <Error className=\"valid\">{formik.errors.newpassword}</Error>\n                  <SuccessIcon />\n                </ContainerErrorIcon>\n              )\n            ) : null}\n          </InputWrapper>\n\n          <InputWrapper isPassword={'newpassword2'}>\n            <Label\n              htmlFor=\"newpassword2\"\n              className={\n                formik.touched.newpassword2\n                  ? formik.errors.newpassword2\n                    ? 'invalid-input'\n                    : 'valid-input'\n                  : ''\n              }\n            >\n              {t('recovery.repeat')}\n            </Label>\n            <InputWrapperWithIcon>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"newpassword2\"\n                name=\"newpassword2\"\n                value={formik.values.newpassword2}\n                placeholder={t('recovery.passhold')}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.touched.newpassword2\n                    ? formik.errors.newpassword2\n                      ? 'invalid-input'\n                      : 'valid-input'\n                    : ''\n                }\n              />\n              {!formik.errors.newpassword2 && (\n                <ShowHideButton\n                  type=\"button\"\n                  onClick={() => setShowPassword(show => !show)}\n                >\n                  {showPassword ? <FiEyeOff /> : <FiEye />}\n                </ShowHideButton>\n              )}\n            </InputWrapperWithIcon>\n            {formik.touched.newpassword2 ? (\n              formik.errors.newpassword2 ? (\n                <ContainerErrorIcon>\n                  <Error className=\"invalid\">\n                    {formik.errors.newpassword2}\n                  </Error>\n                  <ErrorIcon />\n                </ContainerErrorIcon>\n              ) : (\n                <ContainerErrorIcon>\n                  <Error className=\"valid\">{formik.errors.newpassword2}</Error>\n                  <SuccessIcon />\n                </ContainerErrorIcon>\n              )\n            ) : null}\n          </InputWrapper>\n        </InputList>\n        <Button type=\"submit\">\n          <ButtonText>{t('recovery.submit')}</ButtonText>\n          <ItemIcon />\n        </Button>\n      </InputGroupe>\n    </StyledForm>\n  );\n};\n\nexport default PasswordRecoveryForm;\n","import React from 'react';\nimport Modal from '../Modal';\nimport PasswordRecoveryForm from '../PasswordRecoveryForm';\n\nconst AddPasswordRecoveryModal = ({ onClose }) => {\n  return (\n    <Modal onClose={onClose}>\n      <PasswordRecoveryForm onClose={onClose} />\n    </Modal>\n  );\n};\n\nexport default AddPasswordRecoveryModal;\n","import { useTranslation, Trans } from 'react-i18next';\nimport { useState, useEffect, useRef } from 'react';\nimport {\n  ContainerWrapper,\n  Container,\n  InputWrapper,\n  UserName,\n  Image,\n  ImageContainer,\n  IconContainer,\n  Text,\n  Forma,\n  Letter,\n  Button,\n  CustomInput,\n  VerifyWrapper,\n  VerifyText,\n  VerifyBtn,\n  ChangePasswordBtn,\n} from './UserForm.styled';\n\nimport i18next from 'i18next';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport uk from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './CustomDatePicker.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser, sendVerifyEmailUser } from 'redux/auth/operations';\nimport { format, parse } from 'date-fns';\nimport AddPasswordRecoveryModal from 'components/AddPasswordRecoveryModal/AddPasswordRecoveryModal';\n\nregisterLocale('uk', uk);\n\nconst UserForm = () => {\n  const { t } = useTranslation();\n\n  const { userName, email, phone, skype, birthDay, avatarURL, verify } =\n    useSelector(selectUser);\n\n  const [startDate, setStartDate] = useState(\n    birthDay === '' ? new Date() : parse(birthDay, 'dd/MM/yyyy', new Date())\n  );\n  const [newUserName, setNewUserName] = useState(userName ?? '');\n  const [newEmail, setNewEmail] = useState(email ?? '');\n  const [newPhone, setNewPhone] = useState(phone ?? '');\n  const [newSkype, setNewSkype] = useState(skype ?? '');\n  const [newAvatar, setAvatar] = useState(avatarURL ?? '');\n  const [avatarPreviewUrl, setAvatarPreviewUrl] = useState('');\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const dispatch = useDispatch();\n  const avatarInputRef = useRef(null);\n\n  let someChanges =\n    userName !== newUserName ||\n    email !== newEmail ||\n    phone !== newPhone ||\n    skype !== newSkype ||\n    birthDay !== format(startDate, 'dd/MM/yyyy') ||\n    avatarPreviewUrl !== '';\n\n  useEffect(() => {\n    return () => {\n      if (avatarPreviewUrl) {\n        URL.revokeObjectURL(avatarPreviewUrl);\n      }\n    };\n  }, [avatarPreviewUrl, verify]);\n\n  const firstName = userName?.split(' ')[0];\n  const firstLetter = firstName[0]?.toUpperCase();\n\n  const handleIconContainerClick = () => {\n    if (avatarInputRef.current) {\n      avatarInputRef.current.click();\n    }\n  };\n\n  const handleIconOnClick = e => {\n    const file = e.target.files[0];\n    setAvatar(file);\n\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setAvatarPreviewUrl(previewUrl);\n    } else {\n      setAvatarPreviewUrl(avatarURL);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!someChanges) return;\n    const formData = new FormData();\n    if (userName !== newUserName) {\n      formData.append('userName', newUserName);\n    }\n    if (email !== newEmail) {\n      formData.append('email', newEmail);\n    }\n    if (phone !== newPhone) {\n      formData.append('phone', newPhone);\n    }\n    if (skype !== newSkype) {\n      formData.append('skype', newSkype);\n    }\n    if (birthDay !== format(startDate, 'dd/MM/yyyy')) {\n      formData.append('birthDay', format(startDate, 'dd/MM/yyyy'));\n    }\n    if (avatarPreviewUrl !== '') {\n      formData.append('avatar', newAvatar);\n    }\n    dispatch(updateUser(formData));\n  };\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        handleCloseModal();\n      }\n    };\n\n    if (isModalOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n\n  return (\n    <ContainerWrapper>\n      <Container>\n        <Forma onSubmit={handleSubmit}>\n          <ImageContainer>\n            {avatarPreviewUrl ? (\n              <Image src={avatarPreviewUrl} alt={userName} />\n            ) : avatarURL ? (\n              <Image src={avatarURL} alt={userName} />\n            ) : (\n              <Letter>{firstLetter}</Letter>\n            )}\n            <IconContainer onClick={handleIconContainerClick} />\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              ref={avatarInputRef}\n              onChange={handleIconOnClick}\n              style={{ display: 'none' }}\n              name=\"avatar\"\n            />\n          </ImageContainer>\n          <UserName>{userName}</UserName>\n          <Text>\n            <Trans i18nKey=\"userForm.user\">User</Trans>\n          </Text>\n          <InputWrapper>\n            <div>\n              <label>\n                <p>{t('userForm.name')}</p>\n                <input\n                  type=\"text\"\n                  name=\"userName\"\n                  placeholder={t('userForm.namehold')}\n                  value={newUserName}\n                  onChange={e => setNewUserName(e.target.value)}\n                />\n              </label>\n              <label>\n                <p>{t('userForm.birth')}</p>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  locale={i18next.language === 'ua' ? \"uk\" : \"en\"}\n                  calendarStartDay={1}\n                  selected={startDate}\n                  onChange={date => setStartDate(date)}\n                  customInput={\n                    <CustomInput\n                      type=\"text\"\n                      name=\"birthDay\"\n                      placeholder={t('userForm.birthhold')}\n                      value={startDate.toString()}\n                    />\n                  }\n                />\n              </label>\n\n              <div>\n                <label>\n                  <p>{t('userForm.email')}</p>\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder={t('userForm.emailhold')}\n                    value={newEmail}\n                    onChange={e => setNewEmail(e.target.value)}\n                  />\n                </label>\n                {verify ? (\n                  <VerifyText verify={verify}>\n                    {t('userForm.verify')}\n                  </VerifyText>\n                ) : (\n                  <VerifyWrapper>\n                    <VerifyText verify={verify}>\n                      {t('userForm.notverify')}\n                    </VerifyText>\n                    <VerifyBtn onClick={() => dispatch(sendVerifyEmailUser())}>\n                      {t('userForm.verifybtn')}\n                    </VerifyBtn>\n                  </VerifyWrapper>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label>\n                <p>{t('userForm.phone')}</p>\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder={t('userForm.phonehold')}\n                  value={newPhone}\n                  onChange={e => setNewPhone(e.target.value)}\n                />\n              </label>\n              <label>\n                <p>{t('userForm.skype')}</p>\n                <input\n                  type=\"text\"\n                  name=\"skype\"\n                  placeholder={t('userForm.skypehold')}\n                  value={newSkype}\n                  onChange={e => setNewSkype(e.target.value)}\n                />\n              </label>\n\n              <ChangePasswordBtn onClick={handleOpenModal}>\n                {t('userForm.update')}\n              </ChangePasswordBtn>\n            </div>\n            <Button type=\"submit\" disabled={!someChanges}>\n              {t('userForm.save')}\n            </Button>\n          </InputWrapper>\n        </Forma>\n      </Container>\n      {isModalOpen && <AddPasswordRecoveryModal onClose={handleCloseModal} />}\n    </ContainerWrapper>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","UserName","h2","_templateObject3","Image","img","_templateObject4","ImageContainer","_templateObject5","IconContainer","AiFillPlusCircle","_templateObject6","InputWrapper","_templateObject7","Text","p","_templateObject8","Letter","_templateObject9","Forma","form","_templateObject10","VerifyWrapper","_templateObject11","VerifyText","_templateObject12","props","verify","VerifyBtn","button","_templateObject13","Button","_templateObject14","CustomInput","input","_templateObject15","ChangePasswordBtn","_templateObject16","StyledForm","FormName","h1","InputGroupe","InputList","ul","li","InputWrapperWithIcon","ButtonText","span","ItemIcon","FiLogIn","ShowHideButton","Label","label","Input","Error","SuccessIcon","Link","IoCheckmarkDoneCircleOutline","ErrorIcon","MdErrorOutline","ContainerErrorIcon","_templateObject17","_ref","onClose","t","useTranslation","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","validationSchema","yup","oldpassword","min","required","newpassword","newpassword2","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","response","wrap","_context","prev","next","showErrorToast","abrupt","oldPassword","newPassword","Promise","resolve","setTimeout","changePassword","sent","t0","console","error","stop","_x","apply","arguments","_jsx","handleSubmit","children","_jsxs","Trans","i18nKey","isPassword","htmlFor","className","touched","errors","type","id","name","value","placeholder","onChange","handleChange","onBlur","handleBlur","onClick","show","FiEyeOff","style","color","FiEye","Modal","PasswordRecoveryForm","registerLocale","uk","_firstName$","_useSelector","useSelector","selectUser","userName","email","phone","skype","birthDay","avatarURL","Date","parse","startDate","setStartDate","_useState3","_useState4","newUserName","setNewUserName","_useState5","_useState6","newEmail","setNewEmail","_useState7","_useState8","newPhone","setNewPhone","_useState9","_useState10","newSkype","setNewSkype","_useState11","_useState12","newAvatar","setAvatar","_useState13","_useState14","avatarPreviewUrl","setAvatarPreviewUrl","_useState15","_useState16","isModalOpen","setModalOpen","avatarInputRef","useRef","someChanges","format","useEffect","URL","revokeObjectURL","firstLetter","split","toUpperCase","event","preventDefault","FormData","append","updateUser","handleCloseModal","document","body","overflow","handleKeyDown","key","window","addEventListener","removeEventListener","src","alt","current","click","accept","ref","e","file","target","files","previewUrl","createObjectURL","display","DatePicker","dateFormat","locale","i18next","language","calendarStartDay","selected","date","customInput","toString","sendVerifyEmailUser","disabled","AddPasswordRecoveryModal","UserForm"],"sourceRoot":""}