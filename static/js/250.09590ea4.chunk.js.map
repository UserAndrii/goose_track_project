{"version":3,"file":"static/js/250.09590ea4.chunk.js","mappings":"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","sources":["components/Calendar/PeriodPaginator/PeriodPaginator.jsx","components/AddTaskForm/AddTaskForm.styled.jsx","components/AddTaskForm/AddTaskForm.jsx","components/AddTaskModal/AddTaskModal.jsx","components/Calendar/PeriodPaginatorType/PeriodPaginatorType.jsx","components/Calendar/CalendarToolbar.jsx","pages/CalendarPage.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport css from '../Caledar.module.css';\nimport { format, parse } from 'date-fns';\n\nexport const PeriodPaginator = ({\n  isMonthPage,\n  nextPeriod,\n  prevPeriod,\n  currentMonth,\n  currentDay,\n}) => {\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n\n  const formattedMonth =\n    currentDate === undefined ? currentMonth : parsedCurrentDate;\n\n  const formattedDay =\n    currentDate === undefined ? currentDay : parsedCurrentDate;\n\n  return (\n    <div className={css.toolbar__innerBlock}>\n      <button className={css.toolbar__curerntDate}>\n        {isMonthPage\n          ? format(formattedMonth, 'MMMM yyyy')\n          : format(formattedDay, 'd MMMM yyyy')}\n      </button>\n      <div className={css.toggleButtons}>\n        <button className={css.toggleButtons__previous} onClick={prevPeriod}>\n          {'<'}\n        </button>\n        <button className={css.toggleButtons__next} onClick={nextPeriod}>\n          {'>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 20px 8px;\n  @media (max-width: 767px) {\n    width: 85%;\n    height: 70%;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin-top: 8px;\n  border: none;\n  border-radius: 8px;\n  background: #f6f6f6;\n  padding: 14px 18px;\n`;\nexport const TimeWrapper = styled.div`\n  display: flex;\n  margin-top: 18px;\n  margin-bottom: 28px;\n  gap: 14px;\n`;\n\nexport const TimePickerLabel = styled.label`\n  width: 163px;\n  height: 46px;\n`;\n\nexport const PriorityLabel = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const RadioWrapper = styled.div`\n  display: flex;\n`;\nexport const Span = styled.span`\n  margin-left: 6px;\n\n  color: #343434;\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 128.571%;\n`;\n\nexport const RadioInputBlue = styled.input`\n  margin-left: 6px;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  outline: none;\n  position: relative;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid rgba(114, 194, 248, 0.5);\n  transition: background-color 0.3s;\n\n  &:not(:checked) {\n    width: 10px;\n    height: 10px;\n    border: none;\n    background-color: #72c2f8;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #72c2f8;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: ${props => (props.checked ? '1' : '0')};\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n    transition: opacity 0.3s, visibility 0.3s;\n  }\n`;\n\nexport const RadioInputYellow = styled.input`\n  margin-left: 6px;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  outline: none;\n  position: relative;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid rgba(243, 178, 73, 0.5);\n\n  &:not(:checked) {\n    width: 10px;\n    height: 10px;\n    border: none;\n    background-color: #f3b249;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #f3b249;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: ${props => (props.checked ? '1' : '0')};\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n    transition: opacity 0.3s, visibility 0.3s;\n  }\n`;\n\nexport const RadioInputRed = styled.input`\n  margin-left: 6px;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  outline: none;\n  position: relative;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid rgba(234, 61, 101, 0.5);\n\n  &:not(:checked) {\n    width: 10px;\n    height: 10px;\n    border: none;\n    background-color: #ea3d65;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #ea3d65;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: ${props => (props.checked ? '1' : '0')};\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n    transition: opacity 0.3s, visibility 0.3s;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  @media (max-width: 767px) {\n    margin-top: 12px;\n  }\n  margin-top: 32px;\n  gap: 14px;\n`;\n\nexport const Button = styled.button`\n  color: #343434;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 128%;\n\n  padding: 10px 20px;\n  width: 182px;\n  border: none;\n  border-radius: 8px;\n  background-color: #e5edfa;\n\n  cursor: pointer;\n  &:hover {\n    color: #fff;\n    background-color: #3e85f3;\n  }\n`;\n\nexport const ExampleCustomInput = styled.input`\n  border-radius: 8px;\n  background: #f6f6f6;\n  padding: 14px 18px;\n  border: none;\n  width: 163px;\n  height: 46px;\n`;\n","// import { TimePicker } from '@progress/kendo-react-dateinputs';\nimport '@progress/kendo-theme-default/dist/all.css';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { useCreateTasksMutation } from '../../redux/tasks/tasksApi';\nimport {\n  Button,\n  ButtonWrapper,\n  ExampleCustomInput,\n  Form,\n  Input,\n  Label,\n  PriorityLabel,\n  RadioInputBlue,\n  RadioInputRed,\n  RadioInputYellow,\n  RadioWrapper,\n  Span,\n  TimePickerLabel,\n  TimeWrapper,\n} from './AddTaskForm.styled';\n\nconst AddTaskForm = ({ onClose }) => {\n  const [title, setTitle] = useState('');\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [priority, setPriority] = useState('');\n  const [createTask] = useCreateTasksMutation();\n\n  const handleAddTask = async event => {\n    event.preventDefault();\n    if (!title || !startTime || !endTime || !priority) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    if (startTime > endTime) {\n      toast.error('Start time cannot be after end time');\n      console.log('Start time cannot be after end time');\n      return;\n    }\n\n    const formatTime = time => {\n      const hours = time.getHours().toString().padStart(2, '0');\n      const minutes = time.getMinutes().toString().padStart(2, '0');\n      return `${hours}:${minutes}`;\n    };\n\n    const newTask = {\n      title: title,\n      start: formatTime(startTime),\n      end: formatTime(endTime),\n      priority: priority,\n      date: '2023-09-01', // Пример даты\n      category: 'TODO',\n    };\n\n    try {\n      const result = await createTask(newTask);\n      console.log('New task created:', result);\n      onClose();\n    } catch (error) {\n      console.error('Error creating task:', error);\n      toast.error('Error creating task');\n    }\n  };\n\n  const handlePriorityChange = event => {\n    setPriority(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleAddTask}>\n      <Label>\n        Title\n        <Input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Enter text\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n      </Label>\n      <TimeWrapper>\n        <TimePickerLabel>\n          Start\n          <DatePicker\n            selected={startTime}\n            onChange={date => setStartTime(date)}\n            showTimeSelect\n            showTimeSelectOnly\n            timeIntervals={15}\n            customInput={<ExampleCustomInput />}\n            dateFormat=\"h:mm aa\"\n          />\n        </TimePickerLabel>\n        <TimePickerLabel>\n          End\n          <DatePicker\n            selected={endTime}\n            onChange={date => setEndTime(date)}\n            showTimeSelect\n            showTimeSelectOnly\n            timeIntervals={15}\n            customInput={<ExampleCustomInput />}\n            dateFormat=\"h:mm aa\"\n          />\n        </TimePickerLabel>\n      </TimeWrapper>\n\n      <RadioWrapper>\n        <PriorityLabel>\n          <RadioInputBlue\n            type=\"radio\"\n            name=\"priority\"\n            value=\"LOW\"\n            checked={priority === 'LOW'}\n            onChange={handlePriorityChange}\n          />\n          <Span className=\"radio-label\">Low</Span>\n        </PriorityLabel>\n\n        <PriorityLabel>\n          <RadioInputYellow\n            type=\"radio\"\n            name=\"priority\"\n            value=\"MEDIUM\"\n            checked={priority === 'MEDIUM'}\n            onChange={handlePriorityChange}\n          />\n          <Span className=\"radio-label\">Medium</Span>\n        </PriorityLabel>\n\n        <PriorityLabel>\n          <RadioInputRed\n            type=\"radio\"\n            name=\"priority\"\n            value=\"HIGH\"\n            checked={priority === 'HIGH'}\n            onChange={handlePriorityChange}\n          />\n          <Span className=\"radio-label\">High</Span>\n        </PriorityLabel>\n      </RadioWrapper>\n      <ButtonWrapper>\n        <Button type=\"submit\" onClick={handleAddTask}>\n          + Add\n        </Button>\n        <Button type=\"button\" onClick={onClose}>\n          Cancel\n        </Button>\n      </ButtonWrapper>\n    </Form>\n  );\n};\n\nexport default AddTaskForm;\n","import React from 'react';\nimport Modal from '../Modal';\nimport AddTaskForm from 'components/AddTaskForm/AddTaskForm';\n\nconst AddTaskModal = ({ onClose }) => {\n  return (\n    <Modal onClose={onClose}>\n      <AddTaskForm onClose={onClose}/>\n    </Modal>\n  );\n};\n\nexport default AddTaskModal;\n","import { useNavigate } from 'react-router';\nimport css from '../Caledar.module.css';\nimport { format, parse } from 'date-fns';\nimport { useParams } from 'react-router-dom';\n\nexport const PeriodPaginatorType = ({ isMonthPage, changeType }) => {\n  const navigate = useNavigate();\n\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n\n  return (\n    <div className={css.toolbar__calendarRange}>\n      <button\n        className={`${css.toolbar__buttons} ${css.toolbar__monthButton} ${\n          isMonthPage ? css.toolbar__ActiveButton : ''\n        }`}\n        onClick={() => {\n          navigate(`month/${format(parsedCurrentDate, 'yyyy-MM-dd')}`);\n          changeType(true);\n        }}\n      >\n        Month\n      </button>\n      <button\n        className={`${css.toolbar__buttons} ${css.toolbar__dayButton} ${\n          !isMonthPage ? css.toolbar__ActiveButton : ''\n        }`}\n        onClick={() => {\n          navigate(`day/${format(parsedCurrentDate, 'yyyy-MM-dd')}`);\n          changeType(false);\n        }}\n      >\n        Day\n      </button>\n    </div>\n  );\n};\n","import css from './Caledar.module.css';\n\nimport { PeriodPaginator } from './PeriodPaginator/PeriodPaginator';\nimport { PeriodPaginatorType } from './PeriodPaginatorType/PeriodPaginatorType';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { format, parse, add } from 'date-fns';\n\nexport const CalendarToolBar = ({\n  isMonthPage,\n  setIsMonthPage,\n  currentMonth,\n  setCurrentMonth,\n  currentDay,\n  setCurrentDay,\n}) => {\n  const navigate = useNavigate();\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n  const formattedDay =\n    currentDate === undefined ? currentDay : parsedCurrentDate;\n\n  // Current Week\n  // const [currentWeek, setCurrentWeek] = useState({\n  //   start: startOfWeek(today, { weekStartsOn: 1 }),\n  //   end: addDays(endOfWeek(today, { weekStartsOn: 0 }), 1),\n  // });\n  // const Week = eachDayOfInterval(currentWeek);\n\n  // Weeks\n  // const nextWeek = () => {\n  //   const nextWeekStart = addWeeks(currentWeek.start, 1);\n  //   const nextWeekEnd = addDays(\n  //     endOfWeek(nextWeekStart, { weekStartsOn: 0 }),\n  //     1\n  //   );\n  //   setCurrentWeek({ start: addWeeks(currentWeek.start, 1), end: nextWeekEnd });\n  // };\n\n  // const prevWeek = () => {\n  //   const prevWeekStart = subWeeks(currentWeek.start, 1);\n  //   const prevWeekEnd = addDays(\n  //     endOfWeek(prevWeekStart, { weekStartsOn: 0 }),\n  //     1\n  //   );\n  //   setCurrentWeek({ start: prevWeekStart, end: prevWeekEnd });\n  // };\n\n  const prevPeriod = () => {\n    const parsedDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n    if (isMonthPage) {\n      const firstDayPrevMonth = add(parsedDate, { months: -1 });\n      setCurrentMonth(format(firstDayPrevMonth, 'MMM-yyyy'));\n      const newDate = format(firstDayPrevMonth, 'yyyy-MM-dd');\n      navigate(`month/${newDate}`);\n    } else {\n      const prevDay = add(parsedDate, { days: -1 });\n      setCurrentDay(prevDay);\n      const newDate = format(prevDay, 'yyyy-MM-dd');\n      navigate(`day/${newDate}`);\n    }\n  };\n\n  const nextPeriod = () => {\n    const parsedDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n    if (isMonthPage) {\n      const firstDayPrevMonth = add(parsedDate, { months: 1 });\n      setCurrentMonth(format(firstDayPrevMonth, 'MMM-yyyy'));\n      const newDate = format(firstDayPrevMonth, 'yyyy-MM-dd');\n      navigate(`month/${newDate}`);\n    } else {\n      const nextDay = add(parsedDate, { days: 1 });\n      setCurrentDay(nextDay);\n      const newDate = format(nextDay, 'yyyy-MM-dd');\n      navigate(`day/${newDate}`);\n    }\n  };\n\n  const changeType = state => {\n    setIsMonthPage(state);\n  };\n\n  return (\n    <>\n      <div className={css.toolbar}>\n        <PeriodPaginator\n          isMonthPage={isMonthPage}\n          prevPeriod={prevPeriod}\n          nextPeriod={nextPeriod}\n          currentDay={currentDay}\n          currentMonth={currentMonth}\n        />\n\n        <PeriodPaginatorType\n          isMonthPage={isMonthPage}\n          changeType={changeType}\n        />\n      </div>\n\n      <div className={css.calendarRange}>\n        <button\n          className={`${css.calendarRange__buttons} ${\n            css.calendarRange__monthButton\n          } ${isMonthPage ? css.calendarRange__ActiveButton : ''}`}\n          onClick={() => {\n            navigate(`month/${format(formattedDay, 'yyyy-MM-dd')}`);\n            changeType(true);\n          }}\n        >\n          Month\n        </button>\n        <button\n          className={`${css.calendarRange__buttons} ${\n            css.calendarRange__dayButton\n          } ${!isMonthPage ? css.calendarRange__ActiveButton : ''}`}\n          onClick={() => {\n            navigate(`day/${format(formattedDay, 'yyyy-MM-dd')}`);\n            changeType(false);\n          }}\n        >\n          Day\n        </button>\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport AddTaskModal from 'components/AddTaskModal/AddTaskModal';\n// import TasksColumnsList from 'components/TasksColumnsList/TasksColumnsList';\nimport { CalendarToolBar } from '../components/Calendar/CalendarToolbar';\nimport { ChoosedMonth } from '../components/Calendar/ChoosedMonth/ChoosedMonth';\nimport { ChoosedDay } from '../components/Calendar/ChoosedDay/ChoosedDay';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetMonthlyTasksQuery } from 'redux/tasks/tasksApi';\nimport css from '../components/Calendar/Caledar.module.css';\nimport {\n  format,\n  startOfWeek,\n  endOfWeek,\n  endOfMonth,\n  addDays,\n  isWithinInterval,\n  eachDayOfInterval,\n  startOfToday,\n  parse,\n} from 'date-fns';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  let filteredTask;\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isMonthPage, setIsMonthPage] = useState(true);\n  const [tasks, setTasks] = useState(null);\n\n  // day\n  const [currentDay, setCurrentDay] = useState(startOfToday());\n  // month\n  const [currentMonth, setCurrentMonth] = useState(\n    format(startOfToday(), 'MMM-yyyy')\n  );\n  const firstDayCurrentMonth = parse(currentMonth, 'MMM-yyyy', new Date());\n\n  const days = eachDayOfInterval({\n    start: startOfWeek(firstDayCurrentMonth),\n    end: endOfWeek(endOfMonth(firstDayCurrentMonth)),\n  });\n\n  const [currentWeek, setCurrentWeek] = useState({\n    start: startOfWeek(currentDay, { weekStartsOn: 1 }),\n    end: addDays(startOfWeek(currentDay, { weekStartsOn: 1 }), 6),\n  });\n  const week = eachDayOfInterval(currentWeek);\n\n  const isInCurrentWeek = isWithinInterval(currentDay, currentWeek);\n\n  if (!isInCurrentWeek) {\n    const newStartOfWeek = startOfWeek(currentDay, {\n      weekStartsOn: 1,\n    });\n    const newEndOfWeek = addDays(\n      startOfWeek(currentDay, { weekStartsOn: 1 }),\n      6\n    );\n\n    const newCurrentWeek = {\n      start: newStartOfWeek,\n      end: newEndOfWeek,\n    };\n\n    setCurrentWeek(newCurrentWeek);\n  }\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const { data: allTasks, refetch } = useGetMonthlyTasksQuery(\n    format(currentDay, 'yyyy-MM')\n  );\n\n  useEffect(() => {\n    if (allTasks) {\n      const Tasks = [...allTasks.data];\n\n      refetch();\n      setTasks(Tasks);\n    }\n  }, [allTasks, refetch]);\n\n  /* eslint-disable */\n  useEffect(() => {\n    navigate(`month/${format(currentDay, 'yyyy-MM-dd')}`);\n  }, []);\n  /* eslint-enable */\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        handleCloseModal();\n      }\n    };\n\n    if (isModalOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n\n  if (tasks) {\n    const formattedDay = format(currentDay, 'yyyy-MM-dd');\n    filteredTask = tasks.filter(task => task.date === formattedDay);\n  }\n\n  return (\n    <div className={css.calendar}>\n      <CalendarToolBar\n        currentDay={currentDay}\n        setCurrentDay={setCurrentDay}\n        currentMonth={firstDayCurrentMonth}\n        setCurrentMonth={setCurrentMonth}\n        isMonthPage={isMonthPage}\n        setIsMonthPage={setIsMonthPage}\n        week={week}\n      />\n      {isMonthPage ? (\n        <ChoosedMonth\n          currentDay={firstDayCurrentMonth}\n          days={days}\n          setCurrentDay={setCurrentDay}\n          week={week}\n          allTasks={allTasks && allTasks}\n          setTasks={setTasks}\n          setIsMonthPage={setIsMonthPage}\n        />\n      ) : (\n        <ChoosedDay\n          week={week}\n          currentDay={currentDay}\n          setCurrentDay={setCurrentDay}\n          filteredTask={filteredTask && filteredTask}\n        />\n      )}\n      {isModalOpen && <AddTaskModal onClose={handleCloseModal} />}\n    </div>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["PeriodPaginator","_ref","isMonthPage","nextPeriod","prevPeriod","currentMonth","currentDay","currentDate","useParams","parsedCurrentDate","parse","Date","formattedMonth","undefined","formattedDay","_jsxs","className","css","children","_jsx","format","onClick","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","TimeWrapper","_templateObject4","TimePickerLabel","_templateObject5","PriorityLabel","_templateObject6","RadioWrapper","_templateObject7","Span","_templateObject8","RadioInputBlue","_templateObject9","props","checked","RadioInputYellow","_templateObject10","RadioInputRed","_templateObject11","ButtonWrapper","_templateObject12","Button","_templateObject13","ExampleCustomInput","_templateObject14","onClose","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","startTime","setStartTime","_useState5","_useState6","endTime","setEndTime","_useState7","_useState8","priority","setPriority","_useCreateTasksMutati","useCreateTasksMutation","createTask","handleAddTask","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formatTime","newTask","result","wrap","_context","prev","next","preventDefault","toast","abrupt","console","log","start","time","hours","getHours","toString","padStart","minutes","getMinutes","concat","end","date","category","sent","t0","error","stop","_x","apply","arguments","handlePriorityChange","target","value","onSubmit","type","name","placeholder","onChange","e","DatePicker","selected","showTimeSelect","showTimeSelectOnly","timeIntervals","customInput","dateFormat","Modal","AddTaskForm","PeriodPaginatorType","changeType","navigate","useNavigate","CalendarToolBar","setIsMonthPage","setCurrentMonth","setCurrentDay","state","_Fragment","parsedDate","firstDayPrevMonth","add","months","newDate","prevDay","days","nextDay","filteredTask","isModalOpen","setModalOpen","tasks","setTasks","startOfToday","_useState9","_useState10","firstDayCurrentMonth","eachDayOfInterval","startOfWeek","endOfWeek","endOfMonth","_useState11","weekStartsOn","addDays","_useState12","currentWeek","setCurrentWeek","week","isWithinInterval","handleCloseModal","document","body","style","overflow","_useGetMonthlyTasksQu","useGetMonthlyTasksQuery","allTasks","data","refetch","useEffect","Tasks","_toConsumableArray","handleKeyDown","key","window","addEventListener","removeEventListener","filter","task","ChoosedMonth","ChoosedDay","AddTaskModal"],"sourceRoot":""}