{"version":3,"file":"static/js/398.6a46ddae.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const ContainerWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding: 60px 10px 40px;\n  background-color: var(--main-background-color);\n\n  border-radius: 16px;\n  text-align: center;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    /* padding: 60px 0; */\n    height: 100%;\n  }\n`;\n\nexport const UserName = styled.h2`\n  color: var(--calendar-date-color);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n  margin-bottom: 18px;\n\n  background-color: var(--main-background-color);\n  border-radius: 50%;\n  border: 1px solid rgb(47, 103, 228);\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -31px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    width: 124px;\n    height: 124px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const IconContainer = styled(AiFillPlusCircle)`\n  position: absolute;\n  bottom: -3px;\n  right: 12px;\n  background-color: var(--main-background-color);\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  color: rgb(47, 103, 228);\n  border: none;\n  cursor: pointer;\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n  }\n\n  @media screen and (min-width: 768px) {\n    right: 23px;\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    align-items: start;\n    justify-items: center;\n    flex: 1;\n\n    grid-column-gap: 50px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: var(--calendar-date-color);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 14px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Letter = styled.p`\n  color: var(--accent-color);\n  font-weight: 700;\n  font-size: 33px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    font-size: 50px;\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  & > div > div {\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 768px) {\n      gap: 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      gap: 24px;\n    }\n  }\n\n  & > div > div:nth-of-type(1) {\n    margin-bottom: 18px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n\n  & > div > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #343434;\n    outline: none;\n\n    &::placeholder {\n      color: #343434;\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > div > label > p {\n    color: var(--title-text-main-color);\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n\n  & > div > div > div > label {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n  }\n\n  & > div > div > div > label > input {\n    width: 100%;\n    height: 42px;\n    border-radius: 8px;\n    border: 1px solid #e0e0e0;\n    padding: 12px 14px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #343434;\n    outline: none;\n\n    &::placeholder {\n      color: #343434;\n      font-size: 14px;\n      line-height: 18px;\n      font-weight: 400;\n    }\n\n    @media screen and (min-width: 375px) and (max-width: 767px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 354px;\n      height: 46px;\n    }\n  }\n\n  & > div > div > div > label > p {\n    color: #111111;\n    font-size: 12px;\n    line-height: 14px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const VerifyWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 5px;\n`;\n\nexport const VerifyText = styled.p`\n  text-align: left;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: ${props => (props.verify ? '#008000' : '#f94646')};\n  margin-top: ${props => (props.verify ? '10px' : '0')};\n`;\n\nexport const VerifyBtn = styled.button`\n  color: #ffffff;\n  background: #3e85f3;\n  padding: 3px 10px;\n\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 1.2;\n  cursor: pointer;\n\n  border: none;\n  border-radius: 7px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 3px 15px;\n  }\n`;\n\nexport const Button = styled.button`\n  max-width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  background: var(--accent-background-color);\n  border: none;\n  padding: 14px 50px;\n  color: var(--btn-text-color);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 17px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 40px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: var(--active-btn-color);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n  &:disabled {\n    background-color: var(--outlet-background-color);\n    cursor: default;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    padding: 10px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: auto;\n    grid-column: span 2;\n  }\n`;\n\nexport const CustomInput = styled.input`\n  width: 100%;\n  height: 42px;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  padding: 12px 14px;\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 600;\n  color: var(--modal-input-lable-color);\n  outline: none;\n\n  &::placeholder {\n    color: var(--modal-input-lable-color);\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 400;\n  }\n\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport {\n  ContainerWrapper,\n  Container,\n  InputWrapper,\n  UserName,\n  Image,\n  ImageContainer,\n  IconContainer,\n  Text,\n  Forma,\n  Letter,\n  Button,\n  CustomInput,\n  VerifyWrapper,\n  VerifyText,\n  VerifyBtn,\n} from './UserForm.styled';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './CustomDatePicker.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser, sendVerifyEmailUser } from 'redux/auth/operations';\nimport { format, parse } from 'date-fns';\n\nconst UserForm = () => {\n  const { userName, email, phone, skype, birthDay, avatarURL, verify } =\n    useSelector(selectUser);\n\n  const [startDate, setStartDate] = useState(\n    birthDay === '' ? new Date() : parse(birthDay, 'dd/MM/yyyy', new Date())\n  );\n  const [newUserName, setNewUserName] = useState(userName ?? '');\n  const [newEmail, setNewEmail] = useState(email ?? '');\n  const [newPhone, setNewPhone] = useState(phone ?? '');\n  const [newSkype, setNewSkype] = useState(skype ?? '');\n  const [newAvatar, setAvatar] = useState(avatarURL ?? '');\n  const [avatarPreviewUrl, setAvatarPreviewUrl] = useState('');\n\n  const dispatch = useDispatch();\n  const avatarInputRef = useRef(null);\n\n  let someChanges =\n    userName !== newUserName ||\n    email !== newEmail ||\n    phone !== newPhone ||\n    skype !== newSkype ||\n    birthDay !== format(startDate, 'dd/MM/yyyy') ||\n    avatarPreviewUrl !== '';\n\n  useEffect(() => {\n    return () => {\n      if (avatarPreviewUrl) {\n        URL.revokeObjectURL(avatarPreviewUrl);\n      }\n    };\n  }, [avatarPreviewUrl, verify]);\n\n  const firstName = userName?.split(' ')[0];\n  const firstLetter = firstName[0]?.toUpperCase();\n\n  const handleIconContainerClick = () => {\n    if (avatarInputRef.current) {\n      avatarInputRef.current.click();\n    }\n  };\n\n  const handleIconOnClick = e => {\n    const file = e.target.files[0];\n    setAvatar(file);\n\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setAvatarPreviewUrl(previewUrl);\n    } else {\n      setAvatarPreviewUrl(avatarURL);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!someChanges) return;\n    const formData = new FormData();\n    if (userName !== newUserName) {\n      formData.append('userName', newUserName);\n    }\n    if (email !== newEmail) {\n      formData.append('email', newEmail);\n    }\n    if (phone !== newPhone) {\n      formData.append('phone', newPhone);\n    }\n    if (skype !== newSkype) {\n      formData.append('skype', newSkype);\n    }\n    if (birthDay !== format(startDate, 'dd/MM/yyyy')) {\n      formData.append('birthDay', format(startDate, 'dd/MM/yyyy'));\n    }\n    if (avatarPreviewUrl !== '') {\n      formData.append('avatar', newAvatar);\n    }\n    dispatch(updateUser(formData));\n  };\n\n  return (\n    <ContainerWrapper>\n      <Container>\n        <Forma onSubmit={handleSubmit}>\n          <ImageContainer>\n            {avatarPreviewUrl ? (\n              <Image src={avatarPreviewUrl} alt={userName} />\n            ) : avatarURL ? (\n              <Image src={avatarURL} alt={userName} />\n            ) : (\n              <Letter>{firstLetter}</Letter>\n            )}\n            <IconContainer onClick={handleIconContainerClick} />\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              ref={avatarInputRef}\n              onChange={handleIconOnClick}\n              style={{ display: 'none' }}\n              name=\"avatar\"\n            />\n          </ImageContainer>\n          <UserName>{userName}</UserName>\n          <Text>User</Text>\n          <InputWrapper>\n            <div>\n              <label>\n                <p>User Name</p>\n                <input\n                  type=\"text\"\n                  name=\"userName\"\n                  placeholder=\"Add a username\"\n                  value={newUserName}\n                  onChange={e => setNewUserName(e.target.value)}\n                />\n              </label>\n              <label>\n                <p>Birthday</p>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  calendarStartDay={1}\n                  selected={startDate}\n                  onChange={date => setStartDate(date)}\n                  customInput={\n                    <CustomInput\n                      type=\"text\"\n                      name=\"birthDay\"\n                      placeholder=\"Add a birthday\"\n                      value={startDate.toString()}\n                    />\n                  }\n                />\n              </label>\n\n              <div>\n                <label>\n                  <p>Email</p>\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Add an email\"\n                    value={newEmail}\n                    onChange={e => setNewEmail(e.target.value)}\n                  />\n                </label>\n                {verify ? (\n                  <VerifyText verify={verify}>\n                    Your email has been successfully verified.\n                  </VerifyText>\n                ) : (\n                  <VerifyWrapper>\n                    <VerifyText verify={verify}>\n                      Your email has not been verified.\n                    </VerifyText>\n                    <VerifyBtn onClick={() => dispatch(sendVerifyEmailUser())}>\n                      Verify?\n                    </VerifyBtn>\n                  </VerifyWrapper>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label>\n                <p>Phone</p>\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"Add a phone number\"\n                  value={newPhone}\n                  onChange={e => setNewPhone(e.target.value)}\n                />\n              </label>\n              <label>\n                <p>Skype</p>\n                <input\n                  type=\"text\"\n                  name=\"skype\"\n                  placeholder=\"Add a skype number\"\n                  value={newSkype}\n                  onChange={e => setNewSkype(e.target.value)}\n                />\n              </label>\n            </div>\n            <Button type=\"submit\" disabled={!someChanges}>\n              Save changes\n            </Button>\n          </InputWrapper>\n        </Forma>\n      </Container>\n    </ContainerWrapper>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["ContainerWrapper","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","UserName","_templateObject3","Image","_templateObject4","ImageContainer","_templateObject5","IconContainer","AiFillPlusCircle","_templateObject6","InputWrapper","_templateObject7","Text","_templateObject8","Letter","_templateObject9","Forma","_templateObject10","VerifyWrapper","_templateObject11","VerifyText","_templateObject12","props","verify","VerifyBtn","_templateObject13","Button","_templateObject14","CustomInput","_templateObject15","_firstName$","_useSelector","useSelector","selectUser","userName","email","phone","skype","birthDay","avatarURL","_useState","useState","Date","parse","_useState2","_slicedToArray","startDate","setStartDate","_useState3","_useState4","newUserName","setNewUserName","_useState5","_useState6","newEmail","setNewEmail","_useState7","_useState8","newPhone","setNewPhone","_useState9","_useState10","newSkype","setNewSkype","_useState11","_useState12","newAvatar","setAvatar","_useState13","_useState14","avatarPreviewUrl","setAvatarPreviewUrl","dispatch","useDispatch","avatarInputRef","useRef","someChanges","format","useEffect","URL","revokeObjectURL","firstLetter","split","toUpperCase","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","abrupt","FormData","append","updateUser","stop","_x","apply","arguments","_jsx","children","_jsxs","onSubmit","src","alt","onClick","current","click","type","accept","ref","onChange","e","file","target","files","previewUrl","createObjectURL","style","display","name","placeholder","value","DatePicker","dateFormat","calendarStartDay","selected","date","customInput","toString","sendVerifyEmailUser","disabled","UserForm"],"sourceRoot":""}