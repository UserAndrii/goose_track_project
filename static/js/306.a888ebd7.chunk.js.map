{"version":3,"file":"static/js/306.a888ebd7.chunk.js","mappings":"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","sources":["components/Calendar/PeriodPaginator/PeriodPaginator.styled.jsx","components/Calendar/PeriodPaginator/PeriodPaginator.jsx","components/StatisticsChart/StatisticsChart.jsx","components/StatisticsChart/StatisticsChart.styled.jsx","pages/StatisticsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst InnerBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n  }\n`;\nconst CurrentDateWrapper = styled.div`\n  width: 190px;\n  height: 30px;\n\n  border: none;\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    height: 34px;\n    margin-right: 8px;\n  }\n`;\n\nconst CurrentDate = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 12px;\n  width: 190px;\n  height: 30px;\n  color: #fff;\n  background-color: #3e85f3;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 768px) {\n    height: 34px;\n    // margin-right: 8px;\n    font-size: 16px;\n  }\n`;\n\nconst ToggleButtons = styled.div`\n  display: block;\n`;\n\nconst ToggleButton = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 30px;\n  padding: 8px 12px;\n  background-color: #fff;\n  color: black;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 34px;\n  }\n\n  &:hover {\n    background-color: rgba(136, 165, 191, 0.48);\n  }\n\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n`;\n\nexport {\n  InnerBlock,\n  CurrentDate,\n  ToggleButtons,\n  ToggleButton,\n  CurrentDateWrapper,\n};\n","import { useParams } from 'react-router-dom';\nimport {\n  InnerBlock,\n  CurrentDate,\n  ToggleButtons,\n  ToggleButton,\n  CurrentDateWrapper,\n} from './PeriodPaginator.styled';\nimport { format, parse } from 'date-fns';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../../UserForm/CustomDatePicker.css';\n\nconst PeriodPaginator = ({\n  isMonthPage,\n  nextPeriod,\n  prevPeriod,\n  currentMonth,\n  currentDay,\n  handleCurrentDay,\n}) => {\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n\n  const formattedMonth =\n    currentDate === undefined ? currentMonth : parsedCurrentDate;\n\n  const formattedDay =\n    currentDate === undefined ? currentDay : parsedCurrentDate;\n\n  // const [DataDate, setDataDate] = useState();\n\n  return (\n    <InnerBlock>\n      <CurrentDateWrapper>\n        <DatePicker\n          dateFormat=\"dd/MM/yyyy\"\n          calendarStartDay={1}\n          selected={currentDay}\n          onChange={date => handleCurrentDay(date)}\n          customInput={\n            <CurrentDate>\n              {isMonthPage\n                ? format(formattedMonth, 'MMMM yyyy')\n                : format(formattedDay, 'd MMMM yyyy')}\n            </CurrentDate>\n          }\n        />\n      </CurrentDateWrapper>\n      <ToggleButtons>\n        <ToggleButton onClick={prevPeriod}>{'<'}</ToggleButton>\n        <ToggleButton onClick={nextPeriod}>{'>'}</ToggleButton>\n      </ToggleButtons>\n    </InnerBlock>\n  );\n};\n\nexport default PeriodPaginator;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  LabelList,\n  Label,\n} from 'recharts';\nimport PoppinsFontMedium from '../../fonts/Poppins-Medium.ttf';\nimport { useGetMonthlyTasksQuery } from 'redux/tasks/tasksApi';\n// import '../../styles/vars.css';\nconst data = [\n  {\n    name: 'To Do',\n    uv: 0,\n    pv: 0,\n  },\n  {\n    name: 'In Progress',\n    uv: 0,\n    pv: 0,\n  },\n  {\n    name: 'Done',\n    uv: 0,\n    pv: 0,\n  },\n];\nexport default function StatisticsChart({ currentDay, currentMonth }) {\n  // const borderStatistics = getComputedStyle(\n  //   document.documentElement\n  // ).getPropertyValue('dark[--border-statistics]');\n  // // const titleTextColor = getComputedStyle(\n  // //   document.documentElement\n  // // ).getPropertyValue('--title-text-main-color');\n  // // const secondaryTextColor = getComputedStyle(\n  // //   document.documentElement\n  // // ).getPropertyValue('--secondary-text-color');\n  // // const accentColor = getComputedStyle(\n  // //   document.documentElement\n  // // ).getPropertyValue('--accent-color');\n  // // const activeSelectionColor = getComputedStyle(\n  // //   document.documentElement\n  // // ).getPropertyValue('--active-selection');\n  // // const btnTextColor = getComputedStyle(\n  // //   document.documentElement\n  // // ).getPropertyValue('--btn-text-color');\n  // console.log(':>> ', borderStatistics);\n  // // Решта вашого коду залишається незмінним\n\n  const [chartWidth, setChartWidth] = useState(860);\n  const [chartHeight, setChartHeight] = useState(440);\n  const [sizeBar, setSizeBar] = useState(27);\n  const [padChart, setPadChart] = useState(40);\n  const [padTopChart, setPadTopChart] = useState(40);\n  const [padBottomChart, setPadBottomChart] = useState(40);\n  const [fontSize, setFontSize] = useState(16);\n  const [lineHeight, setLineHeight] = useState(18);\n  const [fontSizeL, setFontSizeL] = useState(14);\n  const [lineHeightL, setLineHeightL] = useState(21);\n  const [dataChart, setDataChart] = useState(data);\n  const [tasksPosition, setTasksPosition] = useState(-25);\n  const [marginBar, setMarginBar] = useState(14);\n  const { data: allTasks, refetch } = useGetMonthlyTasksQuery(currentMonth);\n\n  useEffect(() => {\n    refetch();\n    if (allTasks) {\n      const tasks = [...allTasks.data];\n      if (tasks && tasks.length > 0) {\n        const data = [\n          {\n            name: 'To Do',\n            uv:\n              tasks.length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(task => task.category === 'TODO').length /\n                      tasks.length) *\n                      100\n                  ),\n            pv:\n              tasks.filter(task => task.date === currentDay).length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(\n                      task =>\n                        task.category === 'TODO' && task.date === currentDay\n                    ).length /\n                      tasks.filter(task => task.date === currentDay).length) *\n                      100\n                  ),\n          },\n          {\n            name: 'In Progress',\n            uv:\n              tasks.length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(task => task.category === 'INPROGRESS')\n                      .length /\n                      tasks.length) *\n                      100\n                  ),\n            pv:\n              tasks.filter(task => task.date === currentDay).length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(\n                      task =>\n                        task.category === 'INPROGRESS' &&\n                        task.date === currentDay\n                    ).length /\n                      tasks.filter(task => task.date === currentDay).length) *\n                      100\n                  ),\n          },\n          {\n            name: 'Done',\n            uv:\n              tasks.length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(task => task.category === 'DONE').length /\n                      tasks.length) *\n                      100\n                  ),\n            pv:\n              tasks.filter(task => task.date === currentDay).length === 0\n                ? 0\n                : Math.ceil(\n                    (tasks.filter(\n                      task =>\n                        task.category === 'DONE' && task.date === currentDay\n                    ).length /\n                      tasks.filter(task => task.date === currentDay).length) *\n                      100\n                  ),\n          },\n        ];\n        setDataChart(data);\n      } else setDataChart(data);\n    }\n  }, [allTasks, currentDay, refetch]);\n  useEffect(() => {\n    function handleResize() {\n      const screenWidth = window.innerWidth;\n      if (screenWidth <= 375) {\n        setChartWidth(307);\n        setChartHeight(418);\n        setSizeBar(22);\n        setPadChart(14);\n        setPadTopChart(80);\n        setPadBottomChart(40);\n        setFontSize('12px');\n        setLineHeight('16px');\n        setFontSizeL('12px');\n        setLineHeightL('16px');\n        setTasksPosition(0);\n        setMarginBar(4);\n      } else if (screenWidth <= 767) {\n        setChartWidth(307);\n        setChartHeight(418);\n        setSizeBar(22);\n        setPadChart(14);\n        setPadTopChart(80);\n        setPadBottomChart(40);\n        setFontSize('12px');\n        setLineHeight('16px');\n        setFontSizeL('12px');\n        setLineHeightL('16px');\n        setTasksPosition(0);\n        setMarginBar(4);\n      } else if (screenWidth < 1440) {\n        setChartWidth(640);\n        setChartHeight(424);\n        setSizeBar(27);\n        setPadChart(32);\n        setPadTopChart(64);\n        setPadBottomChart(32);\n        setFontSize('16px');\n        setLineHeight('18px');\n        setFontSizeL('14px');\n        setLineHeightL('21px');\n        setTasksPosition(-16);\n        setMarginBar(14);\n      } else {\n        setChartWidth(860);\n        setChartHeight(440);\n        setSizeBar(27);\n        setPadChart(40);\n        setPadTopChart(80);\n        setPadBottomChart(40);\n        setFontSize('16px');\n        setLineHeight('18px');\n        setFontSizeL('14px');\n        setLineHeightL('21px');\n        setTasksPosition(-25);\n        setMarginBar(14);\n      }\n    }\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  function CustomBar(props) {\n    const { x, y, width, height, borderRadius } = props;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          fill=\"url(#pvGradient)\"\n          rx={borderRadius}\n          ry={borderRadius}\n        />\n      </g>\n    );\n  }\n\n  function CustomBar1(props) {\n    const { x, y, width, height, borderRadius } = props;\n\n    return (\n      <g>\n        <rect\n          x={x + marginBar}\n          y={y}\n          width={width}\n          height={height}\n          fill=\"url(#uvGradient)\"\n          rx={borderRadius}\n          ry={borderRadius}\n        />\n      </g>\n    );\n  }\n  const renderCustomizedLabel = props => {\n    const { x, y, width, value, lineHeight, fontSize } = props;\n    const radius = 10;\n\n    return (\n      <g>\n        <text\n          x={x + width / 2}\n          y={y - radius}\n          fill=\"#343434\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          fontSize={fontSize}\n          fontStyle={'normal'}\n          fontWeight={500}\n          fontFamily={PoppinsFontMedium}\n          lineheight={lineHeight}\n        >\n          {value}%\n        </text>\n      </g>\n    );\n  };\n  const renderCustomizedLabel1 = props => {\n    const { x, y, width, value, lineHeight, fontSize } = props;\n    const radius = 10;\n\n    return (\n      <g>\n        <text\n          x={x + width / 2 + marginBar}\n          y={y - radius}\n          fill=\"#343434\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          fontSize={fontSize}\n          fontStyle={'normal'}\n          fontWeight={500}\n          fontFamily={PoppinsFontMedium}\n          lineheight={lineHeight}\n        >\n          {value}%\n        </text>\n      </g>\n    );\n  };\n  return (\n    <BarChart\n      width={chartWidth}\n      height={chartHeight}\n      data={dataChart}\n      margin={{\n        top: padTopChart,\n        right: padChart,\n        left: padChart,\n        bottom: padBottomChart,\n      }}\n      style={{\n        borderRadius: 16,\n        border: '1px solid  rgba(227, 243, 255, 1)',\n      }}\n    >\n      <CartesianGrid\n        strokeDasharray=\"0 0\"\n        vertical={false}\n        stroke={'#E3F3FF'}\n        dx={20}\n        horizontal={{\n          strokeWidth: 1,\n        }}\n      />\n\n      <XAxis\n        dataKey=\"name\"\n        axisLine={false}\n        tickLine={false}\n        tick={{ dy: 19 }}\n        style={{\n          color: '#343434',\n          fontSize: '14px',\n          fontWeight: 400,\n          lineHeight: '21px',\n        }}\n      />\n      <YAxis\n        axisLine={false}\n        tickLine={false}\n        domain={[0, 100]}\n        tick={{\n          dx: -padChart,\n          color: '#343434',\n          fontSize: '14px',\n          fontWeight: 400,\n          lineHeight: '150%',\n        }}\n      >\n        <Label\n          value=\"Tasks\"\n          position=\"top\"\n          dx={tasksPosition}\n          dy={-24}\n          style={{\n            color: '#343434',\n            fontSize: fontSizeL,\n            fontWeight: 600,\n            lineHeight: lineHeightL,\n          }}\n        />\n      </YAxis>\n\n      <Bar\n        dataKey=\"pv\"\n        fill=\"none\"\n        shape={<CustomBar borderRadius={8} />}\n        barSize={sizeBar}\n        style={{ zIndex: 2 }}\n      >\n        <LabelList\n          dataKey=\"pv\"\n          content={renderCustomizedLabel}\n          lineheight={lineHeight}\n          fontSize={fontSize}\n        />\n      </Bar>\n      <Bar\n        dataKey=\"uv\"\n        barSize={sizeBar}\n        fill=\"none\"\n        style={{\n          zIndex: 2,\n\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        }}\n        shape={<CustomBar1 borderRadius={8} marginBar={marginBar} />}\n      >\n        <LabelList\n          dataKey=\"uv\"\n          content={renderCustomizedLabel1}\n          lineheight={lineHeight}\n          fontSize={fontSize}\n          marginBar={marginBar}\n        />\n      </Bar>\n      <defs>\n        <linearGradient id=\"pvGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"0%\" stopColor=\"rgba(255, 210, 221, 0)\" />\n          <stop offset=\"100%\" stopColor=\"#FFD2DD\" />\n        </linearGradient>\n        <linearGradient id=\"uvGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"0%\" stopColor=\"rgba(62, 133, 243, 0)\" />\n          <stop offset=\"100%\" stopColor=\"#3E85F3\" />\n        </linearGradient>\n      </defs>\n    </BarChart>\n  );\n}\n","import styled from '@emotion/styled';\nimport PoppinsFontRegular from '../../fonts/Poppins-Regular.ttf';\nexport const ContainerWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 1057px;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: var(--main-background-color);\n  border-radius: 16px;\n  padding: 0 114px;\n  padding-top: 134px;\n  padding-bottom: auto;\n\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n\n  @media (max-width: 375px) {\n    max-width: 335px;\n    height: 100%;\n    margin: 0 auto;\n    padding: 0 14px;\n    padding-top: 28px;\n    padding-bottom: auto;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    height: 100%;\n    padding: 0 14px;\n    padding-top: 28px;\n    padding-bottom: auto;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 704px;\n    height: 100%;\n    padding: 0 32px;\n    padding-top: 140px;\n    padding-bottom: auto;\n  }\n`;\n\nexport const WrapPeriod = styled.div`\n  width: 860px;\n  display: flex;\n  justify-context: space-between;\n  margin-bottom: 40px;\n  padding: 0 40px;\n\n  @media (max-width: 375px) {\n    max-width: 307px;\n    height: auto;\n    flex-direction: column;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 307px;\n    flex-direction: column;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 640px;\n    padding: 0 32px;\n  }\n`;\n\nexport const WrapLabels = styled.div`\n  display: flex;\n  width: 179px;\n\n  @media (max-width: 375px) {\n    max-width: 158;\n    height: auto;\n    margin-top: 20px;\n  }\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const WrapLabel = styled.div`\n  width: 120px;\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n\n  @media (max-width: 375px) {\n    margin-right: 14px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    margin-right: 14px;\n  }\n`;\n\nexport const Circle = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n`;\nexport const LabelT = styled.p`\n  text-wrap: nowrap;\n  color: var(--calendar-date-color);\n  font-family: ${PoppinsFontRegular};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  @media (max-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n","import PeriodPaginator from 'components/Calendar/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from 'components/StatisticsChart/StatisticsChart';\nimport {\n  Circle,\n  Container,\n  LabelT,\n  WrapLabel,\n  WrapLabels,\n  WrapPeriod,\n  ContainerWrapper,\n} from 'components/StatisticsChart/StatisticsChart.styled';\nimport {\n  addDays,\n  addMonths,\n  endOfMonth,\n  format,\n  startOfToday,\n  subDays,\n  subMonths,\n} from 'date-fns';\n\nimport { useState } from 'react';\n\nconst StatisticsPage = () => {\n  const [currentDay, setCurrentDay] = useState(startOfToday());\n  const [currentMonth, setCurrentMonth] = useState(currentDay);\n  const next = () => {\n    const nextDay = addDays(currentDay, 1);\n    if (nextDay.getDate() === 1) {\n      setCurrentMonth(addMonths(currentMonth, 1));\n    }\n    setCurrentDay(nextDay);\n  };\n\n  const previous = () => {\n    const previousDay = subDays(currentDay, 1);\n    if (\n      previousDay.getDate() === endOfMonth(subMonths(currentMonth, 1)).getDate()\n    ) {\n      setCurrentMonth(subMonths(currentMonth, 1));\n    }\n    setCurrentDay(previousDay);\n  };\n  const handleCurrentDay = day => {\n    setCurrentDay(day);\n    setCurrentMonth(day);\n  };\n  return (\n    <ContainerWrapper>\n      <Container>\n        <WrapPeriod>\n          <PeriodPaginator\n            currentDay={currentDay}\n            handleCurrentDay={handleCurrentDay}\n            isMonthPage={false}\n            nextPeriod={next}\n            prevPeriod={previous}\n          />\n\n          <WrapLabels>\n            <WrapLabel>\n              <Circle\n                style={{\n                  backgroundColor: '#FFD2DD',\n                  marginRight: '8px',\n                }}\n              />\n              <LabelT>By Day</LabelT>\n            </WrapLabel>\n            <WrapLabel>\n              <Circle\n                style={{\n                  backgroundColor: '#3E85F3',\n                  marginRight: '8px',\n                }}\n              />\n              <LabelT>By Month</LabelT>\n            </WrapLabel>\n          </WrapLabels>\n        </WrapPeriod>\n        <StatisticsChart\n          currentDay={format(currentDay, 'yyyy-MM-dd')}\n          currentMonth={format(currentMonth, 'yyyy-MM')}\n        />\n      </Container>\n    </ContainerWrapper>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["InnerBlock","styled","_templateObject","_taggedTemplateLiteral","CurrentDateWrapper","_templateObject2","CurrentDate","_templateObject3","ToggleButtons","_templateObject4","ToggleButton","_templateObject5","_ref","isMonthPage","nextPeriod","prevPeriod","currentMonth","currentDay","handleCurrentDay","currentDate","useParams","parsedCurrentDate","parse","Date","formattedMonth","undefined","formattedDay","_jsxs","children","_jsx","DatePicker","dateFormat","calendarStartDay","selected","onChange","date","customInput","format","onClick","data","name","uv","pv","StatisticsChart","_useState","useState","_useState2","_slicedToArray","chartWidth","setChartWidth","_useState3","_useState4","chartHeight","setChartHeight","_useState5","_useState6","sizeBar","setSizeBar","_useState7","_useState8","padChart","setPadChart","_useState9","_useState10","padTopChart","setPadTopChart","_useState11","_useState12","padBottomChart","setPadBottomChart","_useState13","_useState14","fontSize","setFontSize","_useState15","_useState16","lineHeight","setLineHeight","_useState17","_useState18","fontSizeL","setFontSizeL","_useState19","_useState20","lineHeightL","setLineHeightL","_useState21","_useState22","dataChart","setDataChart","_useState23","_useState24","tasksPosition","setTasksPosition","_useState25","_useState26","marginBar","setMarginBar","_useGetMonthlyTasksQu","useGetMonthlyTasksQuery","allTasks","refetch","CustomBar","props","x","y","width","height","borderRadius","fill","rx","ry","CustomBar1","useEffect","tasks","_toConsumableArray","length","Math","ceil","filter","task","category","handleResize","screenWidth","window","innerWidth","addEventListener","removeEventListener","BarChart","margin","top","right","left","bottom","style","border","CartesianGrid","strokeDasharray","vertical","stroke","dx","horizontal","strokeWidth","XAxis","dataKey","axisLine","tickLine","tick","dy","color","fontWeight","YAxis","domain","Label","value","position","Bar","shape","barSize","zIndex","LabelList","content","textAnchor","dominantBaseline","fontStyle","fontFamily","PoppinsFontMedium","lineheight","borderTopLeftRadius","borderTopRightRadius","id","x1","y1","x2","y2","offset","stopColor","ContainerWrapper","Container","WrapPeriod","WrapLabels","WrapLabel","Circle","_templateObject6","LabelT","_templateObject7","PoppinsFontRegular","startOfToday","setCurrentDay","setCurrentMonth","PeriodPaginator","day","nextDay","addDays","getDate","addMonths","previousDay","subDays","endOfMonth","subMonths","backgroundColor","marginRight"],"sourceRoot":""}