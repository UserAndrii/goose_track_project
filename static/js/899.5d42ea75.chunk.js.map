{"version":3,"file":"static/js/899.5d42ea75.chunk.js","mappings":"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","sources":["components/Calendar/PeriodPaginator/PeriodPaginator.styled.jsx","components/Calendar/PeriodPaginator/PeriodPaginator.jsx","components/Calendar/PeriodPaginatorType/PeriodPaginatorType.styled.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.styled.jsx","components/Calendar/PeriodPaginatorType/PeriodPaginatorType.jsx","../node_modules/date-fns/esm/add/index.js","components/Calendar/CalendarToolbar/CalendarToolbar.jsx","components/Calendar/Calendar.styled.jsx","../node_modules/date-fns/esm/eachDayOfInterval/index.js","pages/CalendarPage.jsx","../node_modules/date-fns/esm/startOfToday/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst InnerBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n  }\n`;\nconst CurrentDateWrapper = styled.div`\n  width: 190px;\n  height: 30px;\n\n  border: none;\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    height: 34px;\n    margin-right: 8px;\n  }\n`;\n\nconst CurrentDate = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 12px;\n  width: 190px;\n  height: 30px;\n  color: var(--btn-text-color);\n  background-color: var(--accent-background-color);\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 34px;\n    // margin-right: 8px;\n    font-size: 16px;\n  }\n`;\n\nconst ToggleButtons = styled.div`\n  display: block;\n`;\n\nconst ToggleButton = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 30px;\n  padding: 8px 12px;\n  background-color: var(--background-button-day);\n  color: var(--feedback-form-text-input);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid var(--calendartable-border-color);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 34px;\n  }\n\n  &:hover {\n    background-color: rgba(136, 165, 191, 0.48);\n  }\n\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n`;\n\nexport {\n  InnerBlock,\n  CurrentDate,\n  ToggleButtons,\n  ToggleButton,\n  CurrentDateWrapper,\n};\n","import { useParams } from 'react-router-dom';\nimport {\n  InnerBlock,\n  CurrentDate,\n  ToggleButtons,\n  ToggleButton,\n  CurrentDateWrapper,\n} from './PeriodPaginator.styled';\nimport { format, parse } from 'date-fns';\n\nimport i18next from 'i18next';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport uk from 'date-fns/locale/uk';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../../UserForm/CustomDatePicker.css';\n\nregisterLocale('uk', uk);\n\nconst PeriodPaginator = ({\n  isMonthPage,\n  nextPeriod,\n  prevPeriod,\n  currentMonth,\n  currentDay,\n  handleCurrentDay,\n}) => {\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n\n  const formattedMonth =\n    currentDate === undefined ? currentMonth : parsedCurrentDate;\n\n  const formattedDay =\n    currentDate === undefined ? currentDay : parsedCurrentDate;\n\n  return (\n    <InnerBlock>\n      <CurrentDateWrapper>\n        <DatePicker\n          dateFormat=\"dd/MM/yyyy\"\n          locale={i18next.language === 'ua' ? 'uk' : 'en'}\n          calendarStartDay={1}\n          selected={currentDay}\n          onChange={date => handleCurrentDay(date)}\n          customInput={\n            <CurrentDate>\n              {isMonthPage\n                ? `${i18next.t(\n                    `calendar.${format(formattedMonth, 'MMMM')}`\n                  )} ${format(formattedMonth, 'yyyy')}`\n                : `${format(formattedDay, 'd')} ${i18next.t(\n                    `calendar.${format(formattedDay, 'MMMM')}`\n                  )} ${format(formattedDay, 'yyyy')}`}\n            </CurrentDate>\n          }\n        />\n      </CurrentDateWrapper>\n      <ToggleButtons>\n        <ToggleButton onClick={prevPeriod}>{'<'}</ToggleButton>\n        <ToggleButton onClick={nextPeriod}>{'>'}</ToggleButton>\n      </ToggleButtons>\n    </InnerBlock>\n  );\n};\n\nexport default PeriodPaginator;\n","import styled from '@emotion/styled';\n\nconst CalendarRange = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 76px;\n  height: 34px;\n  padding: 8px 16px;\n  margin-top: 18px;\n  color: var(--accent-color);\n  background-color: var(--auth-background-color);\n\n  &.onMonth {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n\n  &.onDay {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n\n  &.isActive {\n    background-color: var(--outlet-background-color);\n  }\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  cursor: pointer;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n\n  &:hover {\n    background-color: rgba(11, 104, 234, 0.2);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    font-size: 16px;\n  }\n`;\n\nexport { CalendarRange, Button };\n","import styled from '@emotion/styled';\n\nconst ToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n`;\n\nconst CalendarRangeWrapper = styled.div`\n  display: flex;\n\n  max-width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nconst CalendarRangeButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 76px;\n  height: 34px;\n  padding: 8px 16px;\n  margin-top: 18px;\n  color: var(--accent-color);\n  background-color: var(--auth-background-color);\n  cursor: pointer;\n\n  &.onMonth {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n\n  &.onDay {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n\n  &.isActive {\n    background-color: var(--outlet-background-color);\n  }\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  &:hover {\n    background-color: rgba(11, 104, 234, 0.2);\n  }\n`;\nconst ButtonView = styled.button`\n  box-sizing: content-box;\n  display: flex;\n  margin-right: 10px;\n  border-radius: 8px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  padding: 0;\n\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--calendartable-border-color);\n  color: var(--accent);\n  background-color: var(--background-button-day);\n  &:hover {\n    background-color: rgba(11, 104, 234, 0.2);\n  }\n`;\n\nexport {\n  ToolbarWrapper,\n  CalendarRangeWrapper,\n  CalendarRangeButton,\n  ButtonView,\n};\n","import { useNavigate } from 'react-router';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport { CalendarRange, Button } from './PeriodPaginatorType.styled';\n\nimport { format, parse } from 'date-fns';\nimport { useParams } from 'react-router-dom';\nimport { ButtonView } from '../CalendarToolbar/CalendarToolbar.styled';\nimport { FaRegListAlt, FaThLarge } from 'react-icons/fa';\nconst PeriodPaginatorType = ({ isMonthPage, isView, setIsView }) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n\n  return (\n    <CalendarRange>\n      {isMonthPage ? (\n        <ButtonView\n          onClick={() => {\n            setIsView(prev => !prev);\n          }}\n        >\n          {isView ? (\n            <FaThLarge style={{ width: '25px', height: '25px' }} />\n          ) : (\n            <FaRegListAlt style={{ width: '25px', height: '25px' }} />\n          )}\n        </ButtonView>\n      ) : (\n        <></>\n      )}\n      <Button\n        className={`onMonth ${isMonthPage ? 'isActive' : ''}`}\n        onClick={() => {\n          navigate(`month/${format(parsedCurrentDate, 'yyyy-MM-dd')}`);\n        }}\n        isMonthPage\n      >\n        <Trans i18nKey=\"calendar.month\">Month</Trans>\n      </Button>\n      <Button\n        className={`onDay ${!isMonthPage ? 'isActive' : ''}`}\n        onClick={() => {\n          navigate(`day/${format(parsedCurrentDate, 'yyyy-MM-dd')}`);\n        }}\n        isMonthPage\n      >\n        {t('calendar.day')}\n      </Button>\n    </CalendarRange>\n  );\n};\n\nexport default PeriodPaginatorType;\n","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import { useTranslation, Trans } from 'react-i18next';\nimport PeriodPaginator from '../PeriodPaginator';\nimport PeriodPaginatorType from '../PeriodPaginatorType';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport {\n  ToolbarWrapper,\n  CalendarRangeWrapper,\n  CalendarRangeButton,\n  ButtonView,\n} from './CalendarToolbar.styled';\n\nimport { format, parse, add } from 'date-fns';\nimport { FaRegListAlt, FaThLarge } from 'react-icons/fa';\n\nexport const CalendarToolBar = ({\n  isMonthPage,\n  currentMonth,\n  setCurrentMonth,\n  currentDay,\n  setCurrentDay,\n  isView,\n  setIsView,\n}) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n  const formattedDay =\n    currentDate === undefined ? currentDay : parsedCurrentDate;\n\n  const prevPeriod = () => {\n    const parsedDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n    if (isMonthPage) {\n      const firstDayPrevMonth = add(parsedDate, { months: -1 });\n      setCurrentMonth(format(firstDayPrevMonth, 'MMM-yyyy'));\n      const newDate = format(firstDayPrevMonth, 'yyyy-MM-dd');\n      navigate(`month/${newDate}`);\n    } else {\n      const prevDay = add(parsedDate, { days: -1 });\n      setCurrentDay(prevDay);\n      const newDate = format(prevDay, 'yyyy-MM-dd');\n      navigate(`day/${newDate}`);\n    }\n  };\n\n  const nextPeriod = () => {\n    const parsedDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n    if (isMonthPage) {\n      const firstDayPrevMonth = add(parsedDate, { months: 1 });\n      setCurrentMonth(format(firstDayPrevMonth, 'MMM-yyyy'));\n      const newDate = format(firstDayPrevMonth, 'yyyy-MM-dd');\n      navigate(`month/${newDate}`);\n    } else {\n      const nextDay = add(parsedDate, { days: 1 });\n      setCurrentDay(nextDay);\n      const newDate = format(nextDay, 'yyyy-MM-dd');\n      navigate(`day/${newDate}`);\n    }\n  };\n  const handleCurrentDay = day => {\n    if (isMonthPage) {\n      setCurrentMonth(format(day, 'MMM-yyyy'));\n      setCurrentDay(day);\n      navigate(`month/${format(day, 'yyyy-MM-dd')}`);\n    } else {\n      setCurrentDay(day);\n      navigate(`day/${format(day, 'yyyy-MM-dd')}`);\n    }\n  };\n  return (\n    <>\n      <ToolbarWrapper>\n        <PeriodPaginator\n          isMonthPage={isMonthPage}\n          prevPeriod={prevPeriod}\n          nextPeriod={nextPeriod}\n          currentDay={currentDay}\n          currentMonth={currentMonth}\n          handleCurrentDay={handleCurrentDay}\n        />\n\n        <PeriodPaginatorType\n          isView={isView}\n          setIsView={setIsView}\n          isMonthPage={isMonthPage}\n        />\n      </ToolbarWrapper>\n\n      <CalendarRangeWrapper>\n        <CalendarRangeButton\n          className={`onMonth ${\n            isMonthPage ? 'isActive' : 'rgba(227, 243, 255, 1)'\n          }`}\n          onClick={() => {\n            navigate(`month/${format(formattedDay, 'yyyy-MM-dd')}`);\n          }}\n        >\n          <Trans i18nKey=\"calendar.month\">Month</Trans>\n        </CalendarRangeButton>\n        <CalendarRangeButton\n          className={`onDay ${\n            !isMonthPage ? 'isActive' : 'rgba(227, 243, 255, 1)'\n          }`}\n          onClick={() => {\n            navigate(`day/${format(formattedDay, 'yyyy-MM-dd')}`);\n          }}\n        >\n          {t('calendar.day')}\n        </CalendarRangeButton>\n        {isMonthPage ? (\n          <ButtonView\n            style={{ marginTop: '18px', marginLeft: 'auto', marginRight: '0' }}\n            onClick={() => {\n              setIsView(prev => !prev);\n            }}\n          >\n            {isView ? (\n              <FaThLarge style={{ width: '25px', height: '25px' }} />\n            ) : (\n              <FaRegListAlt style={{ width: '25px', height: '25px' }} />\n            )}\n          </ButtonView>\n        ) : (\n          <></>\n        )}\n      </CalendarRangeWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst Calendar = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex:1;\nwidth: 100%;\nheight: 100%;\n  padding: 0px 20px 52px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0px 32px 42px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0px 32px 32px 32px;\n  }\n`;\n\nexport { Calendar };\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import { useState, useEffect } from 'react';\nimport AddTaskModal from 'components/AddTaskModal/AddTaskModal';\nimport { CalendarToolBar } from '../components/Calendar/CalendarToolbar/CalendarToolbar';\nimport { ChoosedMonth } from '../components/Calendar/ChoosedMonth/ChoosedMonth';\nimport { ChoosedDay } from '../components/Calendar/ChoosedDay/ChoosedDay';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useGetMonthlyTasksQuery } from 'redux/tasks/tasksApi';\nimport { Calendar } from '../components/Calendar/Calendar.styled';\nimport {\n  format,\n  startOfWeek,\n  endOfWeek,\n  endOfMonth,\n  addDays,\n  isWithinInterval,\n  eachDayOfInterval,\n  startOfToday,\n  parse,\n} from 'date-fns';\nimport { loadLocal, saveLocal } from 'components/ThemeToggler/localStorage';\nconst view = loadLocal('isView') ?? true;\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  /* eslint-disable */\n  const [_, __, monthOrDay, date] = location.pathname.split('/');\n  /* eslint-enable */\n\n  let filteredTask;\n  const [isView, setIsView] = useState(view);\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const [isMonthPage, setIsMonthPage] = useState(true);\n\n  const [tasks, setTasks] = useState(null);\n\n  const [currentDay, setCurrentDay] = useState(startOfToday());\n\n  const [currentMonth, setCurrentMonth] = useState(\n    format(startOfToday(), 'MMM-yyyy')\n  );\n  useEffect(() => {\n    saveLocal('isView', isView);\n  }, [isView]);\n  const firstDayCurrentMonth = parse(currentMonth, 'MMM-yyyy', new Date());\n\n  const days = eachDayOfInterval({\n    start: startOfWeek(firstDayCurrentMonth, { weekStartsOn: 1 }),\n    end: endOfWeek(endOfMonth(firstDayCurrentMonth)),\n  });\n\n  const [currentWeek, setCurrentWeek] = useState({\n    start: startOfWeek(currentDay, { weekStartsOn: 1 }),\n    end: addDays(startOfWeek(currentDay, { weekStartsOn: 1 }), 6),\n  });\n  const week = eachDayOfInterval(currentWeek);\n\n  const isInCurrentWeek = isWithinInterval(currentDay, currentWeek);\n\n  if (!isInCurrentWeek) {\n    const newStartOfWeek = startOfWeek(currentDay, {\n      weekStartsOn: 1,\n    });\n    const newEndOfWeek = addDays(\n      startOfWeek(currentDay, { weekStartsOn: 1 }),\n      6\n    );\n\n    const newCurrentWeek = {\n      start: newStartOfWeek,\n      end: newEndOfWeek,\n    };\n\n    setCurrentWeek(newCurrentWeek);\n  }\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'yyyy-MM-dd', new Date());\n  const formattedMonth =\n    currentDate === undefined ? firstDayCurrentMonth : parsedCurrentDate;\n\n  const { data: allTasks } = useGetMonthlyTasksQuery(\n    format(formattedMonth, 'yyyy-MM'),\n    { skip: formattedMonth === undefined }\n  );\n\n  /* eslint-disable */\n  useEffect(() => {\n    navigate(`month/${format(currentDay, 'yyyy-MM-dd')}`);\n  }, []);\n  /* eslint-enable */\n\n  useEffect(() => {\n    if (monthOrDay) {\n      if (monthOrDay === 'month') {\n        setIsMonthPage(true);\n      } else {\n        setIsMonthPage(false);\n      }\n    }\n  }, [monthOrDay]);\n  useEffect(() => {\n    // refetch();\n    if (allTasks) {\n      const Tasks = [...allTasks.data];\n      setTasks(Tasks);\n    }\n  }, [allTasks]);\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        handleCloseModal();\n      }\n    };\n\n    if (isModalOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n\n  if (tasks) {\n    const formattedDay = format(currentDay, 'yyyy-MM-dd');\n    filteredTask = tasks.filter(task => task.date === formattedDay);\n  }\n\n  return (\n    <Calendar>\n      <CalendarToolBar\n        currentDay={currentDay}\n        setCurrentDay={setCurrentDay}\n        currentMonth={firstDayCurrentMonth}\n        setCurrentMonth={setCurrentMonth}\n        isMonthPage={isMonthPage}\n        week={week}\n        setIsView={setIsView}\n        isView={isView}\n      />\n      {isMonthPage ? (\n        <ChoosedMonth\n          currentDay={firstDayCurrentMonth}\n          days={days}\n          setCurrentDay={setCurrentDay}\n          week={week}\n          allTasks={allTasks && allTasks}\n          setTasks={setTasks}\n          setIsMonthPage={setIsMonthPage}\n          isView={isView}\n        />\n      ) : (\n        <ChoosedDay\n          week={week}\n          currentDay={currentDay}\n          setCurrentDay={setCurrentDay}\n          setIsMonthPage={setIsMonthPage}\n          filteredTask={filteredTask && filteredTask}\n        />\n      )}\n      {isModalOpen && <AddTaskModal onClose={handleCloseModal} />}\n    </Calendar>\n  );\n};\n\nexport default CalendarPage;\n","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}"],"names":["InnerBlock","styled","div","_templateObject","_taggedTemplateLiteral","CurrentDateWrapper","_templateObject2","CurrentDate","button","_templateObject3","ToggleButtons","_templateObject4","ToggleButton","_templateObject5","registerLocale","uk","_ref","isMonthPage","nextPeriod","prevPeriod","currentMonth","currentDay","handleCurrentDay","currentDate","useParams","parsedCurrentDate","parse","Date","formattedMonth","undefined","formattedDay","_jsxs","children","_jsx","DatePicker","dateFormat","locale","i18next","language","calendarStartDay","selected","onChange","date","customInput","concat","format","onClick","CalendarRange","Button","ToolbarWrapper","CalendarRangeWrapper","CalendarRangeButton","ButtonView","isView","setIsView","navigate","useNavigate","t","useTranslation","prev","FaThLarge","style","width","height","FaRegListAlt","_Fragment","className","Trans","i18nKey","add","dirtyDate","duration","requiredArgs","arguments","_typeof","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","toDate","dateWithMonths","addMonths","dateWithDays","addDays","msToAdd","getTime","CalendarToolBar","setCurrentMonth","setCurrentDay","PeriodPaginator","parsedDate","firstDayPrevMonth","newDate","prevDay","nextDay","day","PeriodPaginatorType","marginTop","marginLeft","marginRight","Calendar","eachDayOfInterval","dirtyInterval","options","_options$step","interval","startDate","start","endTime","end","RangeError","dates","setHours","step","Number","isNaN","push","setDate","getDate","view","_loadLocal","loadLocal","filteredTask","_location$pathname$sp","useLocation","pathname","split","_location$pathname$sp2","_slicedToArray","monthOrDay","_useState","useState","_useState2","_useState3","_useState4","isModalOpen","setModalOpen","_useState5","_useState6","setIsMonthPage","_useState7","_useState8","tasks","setTasks","_useState9","startOfToday","_useState10","_useState11","_useState12","useEffect","saveLocal","firstDayCurrentMonth","startOfWeek","weekStartsOn","endOfWeek","endOfMonth","_useState13","_useState14","currentWeek","setCurrentWeek","week","isWithinInterval","handleCloseModal","document","body","overflow","allTasks","useGetMonthlyTasksQuery","skip","data","Tasks","_toConsumableArray","handleKeyDown","event","key","window","addEventListener","removeEventListener","filter","task","ChoosedMonth","ChoosedDay","AddTaskModal","onClose","startOfDay","now"],"sourceRoot":""}