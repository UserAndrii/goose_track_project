{"version":3,"file":"static/js/851.73e32f1d.chunk.js","mappings":"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","sources":["components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  color: #111111;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.15;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const LinkTo = styled(Link)`\n  color: var(--accent-background-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.15;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import { useTranslation, Trans } from 'react-i18next';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { LinkTo, Wrapper, Text } from './AuthNavigate.styled';\n\nconst AuthNavigate = () => {\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n  const [activePageQuestions, setActivePageQuestions] = useState('');\n\n  useEffect(() => {\n    switch (pathname) {\n      case '/login':\n        return setActivePageQuestions(\n          <Trans i18nKey=\"inout.donthave\">Don't have an account?</Trans>\n        );\n\n      case '/register':\n        return setActivePageQuestions(`${t('inout.have')}`);\n\n      default:\n        setActivePageQuestions('');\n        return;\n    }\n  }, [pathname, t]);\n\n  return pathname === '/login' ? (\n    <Wrapper>\n      <Text>\n        {activePageQuestions}{' '}\n        <LinkTo to=\"/register\">{t('inout.signup')}</LinkTo>\n      </Text>\n      <LinkTo to=\"/password_recovery\">{t('inout.forgot')}</LinkTo>\n    </Wrapper>\n  ) : (\n    <Wrapper>\n      <Text>\n        {activePageQuestions} <LinkTo to=\"/login\">{t('inout.login')}</LinkTo>\n      </Text>\n    </Wrapper>\n  );\n};\n\nexport default AuthNavigate;\n","import styled from '@emotion/styled';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { IoCheckmarkDoneCircleOutline } from 'react-icons/io5';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 100vh;\n  min-width: 100%;\n  background: var(--auth-background-color);\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormName = styled.h1`\n  color: var(--accent-color);\n  text-shadow: 0px 9.4px 57px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const InputGroupe = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 32px;\n\n  padding: 40px 24px;\n  border-radius: 8px;\n  background: #fff;\n\n  @media screen and (max-width: 375px) {\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n  }\n`;\n\nexport const InputList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  background: var(--main-background-color);\n`;\n\nexport const InputWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  Input::placeholder {\n    color: #858688;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: var(--main-background-color);\n  }\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const InputWrapperWithIcon = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  position: relative;\n  Input::placeholder {\n    color: #858688;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    background-color: var(--main-background-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  gap: 10px;\n\n  border-radius: 16px;\n  background: var(--accent-background-color);\n  border: none;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  cursor: pointer;\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n    padding: 14px 103px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    padding: 16px 152px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  white-space: nowrap;\n  color: var(--main-background-color);\n  font-family: inherit;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29;\n  letter-spacing: -0.28px;\n`;\n\nexport const ItemIcon = styled(FiLogIn)`\n  width: 18px;\n  height: 18px;\n  flex-shrink: 0;\n  color: var(--btn-text-color);\n`;\n\nexport const ShowHideButton = styled.button`\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinksContainer = styled.nav`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 18px;\n  gap: 18px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 8px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  color: var(--title-text-main-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  &.valid-input {\n    color: #3cbc81;\n  }\n\n  &.invalid-input {\n    color: #ff0000;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: var(--title-text-main-color);\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 46px;\n  padding: 14px;\n\n  border-radius: 8px;\n  padding: 14px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: ${props =>\n    props.isPassword || props.isEmail ? '#FFFFFF' : 'none'};\n  outline: none;\n\n  &.valid-input {\n    border: 1px solid #3cbc81;\n  }\n\n  &.invalid-input {\n    border: 1px solid #ff0000;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid var(--title-text-main-color);\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    height: 54px;\n    padding: 18px;\n  }\n`;\n\nexport const Error = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-top: 8px;\n  margin-left: 18px;\n\n  &.valid {\n    color: #3cbc81;\n  }\n\n  &.invalid {\n    color: #ff0000;\n  }\n`;\n\nexport const LinkTo = styled(Link)`\n  color: var(--accent-color);\n  font-size: 16px;\n  line-height: 14px;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const SuccessIcon = styled(IoCheckmarkDoneCircleOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 22px;\n  width: 18px;\n  height: 18px;\n  color: #3cbc81;\n\n  @media screen and (min-width: 768px) {\n    bottom: 27px;\n  }\n`;\n\nexport const ErrorIcon = styled(MdErrorOutline)`\n  position: absolute;\n  right: 12px;\n  bottom: 37px;\n  width: 18px;\n  height: 18px;\n  color: #ff0000;\n\n  @media screen and (min-width: 768px) {\n    bottom: 41px;\n  }\n`;\n\nexport const ContainerErrorIcon = styled.div`\n  position: relative;\n`;\n\nexport const PictureWrapper = styled.div`\n  display: ${props => (props.hide ? 'block' : 'none')};\n  position: absolute;\n  bottom: 0;\n  left: 49px;\n\n  width: 400px;\n  height: 416px;\n\n  @media screen and (min-width: 1440px) {\n    display: ${props => (props.hide ? 'none' : 'block')};\n  }\n`;\n","import { useTranslation, Trans } from 'react-i18next';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Container,\n  StyledForm,\n  InputGroupe,\n  LinksContainer,\n  FormName,\n  InputWrapper,\n  Button,\n  ButtonText,\n  ItemIcon,\n  Label,\n  Input,\n  ShowHideButton,\n  InputWrapperWithIcon,\n  InputList,\n  Error,\n  ErrorIcon,\n  ContainerErrorIcon,\n  PictureWrapper,\n  SuccessIcon,\n} from './RegisterForm.styled';\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\n\nimport registerElements from 'images/signup-elements.png';\nimport registerElementsRetina from 'images/signup-elements@2x.png';\nimport AuthNavigate from 'components/AuthNavigate/AuthNavigate';\nimport ImageAnimation from 'components/Bandero-goose/ImageAnimation';\n\nconst RegisterForm = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showAnimation, setShowAnimation] = useState(false);\n\n  const emailRegexp =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\n\n  const validationSchema = yup.object({\n    name: yup\n      .string()\n      .min(3, t('recovery.err3'))\n      .required(t('recovery.err2')),\n    email: yup\n      .string()\n      .matches(emailRegexp, t('recovery.err1'))\n      .required(t('recovery.err2')),\n    password: yup\n      .string()\n      .min(6, t('recovery.err3'))\n      .required(t('recovery.err2')),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n\n    onSubmit: async values => {\n      try {\n        const formData = {\n          userName: values.name,\n          email: values.email,\n          password: values.password,\n        };\n\n        setShowAnimation(true);\n\n        setTimeout(() => {\n          setShowAnimation(false);\n        }, 3000);\n\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        const response = await dispatch(register(formData));\n        if (response.payload.message === 'success') {\n          formik.resetForm();\n          navigate('/calendar');\n        }\n        return response;\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <Container style={{ display: showAnimation ? 'none' : 'flex' }}>\n        <StyledForm onSubmit={formik.handleSubmit}>\n          <InputGroupe>\n            <FormName>\n              <Trans i18nKey=\"inout.signup\">Sign Up</Trans>\n            </FormName>\n            <InputList>\n              <InputWrapper>\n                <Label\n                  htmlFor=\"userName\"\n                  className={\n                    formik.touched.name\n                      ? formik.errors.name\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  {t('inout.name')}\n                </Label>\n                <Input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  autoComplete=\"true\"\n                  value={formik.values.name}\n                  placeholder={t('inout.namehold')}\n                  onBlur={formik.handleBlur}\n                  onChange={formik.handleChange}\n                  className={\n                    formik.touched.name\n                      ? formik.errors.name\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                />\n                {formik.touched.name ? (\n                  formik.errors.name ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">{formik.errors.name}</Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.name}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n              <InputWrapper isEmail={'email'}>\n                <Label\n                  htmlFor=\"email\"\n                  className={\n                    formik.touched.email\n                      ? formik.errors.email\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  {t('inout.email')}\n                </Label>\n                <Input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  autoComplete=\"true\"\n                  value={formik.values.email}\n                  placeholder={t('inout.emailhold')}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  className={\n                    formik.touched.email\n                      ? formik.errors.email\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                />\n                {formik.touched.email ? (\n                  formik.errors.email ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">{formik.errors.email}</Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.email}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n              <InputWrapper isPassword={'password'}>\n                <Label\n                  htmlFor=\"password\"\n                  className={\n                    formik.touched.password\n                      ? formik.errors.password\n                        ? 'invalid-input'\n                        : 'valid-input'\n                      : ''\n                  }\n                >\n                  {t('inout.pass')}\n                </Label>\n                <InputWrapperWithIcon>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    placeholder={t('inout.passhold')}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    className={\n                      formik.touched.password\n                        ? formik.errors.password\n                          ? 'invalid-input'\n                          : 'valid-input'\n                        : ''\n                    }\n                  />\n                  {!formik.errors.password && (\n                    <ShowHideButton\n                      type=\"button\"\n                      onClick={() => setShowPassword(show => !show)}\n                    >\n                      {showPassword ? <FiEyeOff /> : <FiEye />}\n                    </ShowHideButton>\n                  )}\n                </InputWrapperWithIcon>\n                {formik.touched.password ? (\n                  formik.errors.password ? (\n                    <ContainerErrorIcon>\n                      <Error className=\"invalid\">\n                        {formik.errors.password}\n                      </Error>\n                      <ErrorIcon />\n                    </ContainerErrorIcon>\n                  ) : (\n                    <ContainerErrorIcon>\n                      <Error className=\"valid\">{formik.errors.password}</Error>\n                      <SuccessIcon />\n                    </ContainerErrorIcon>\n                  )\n                ) : null}\n              </InputWrapper>\n            </InputList>\n            <Button type=\"submit\">\n              <ButtonText> {t('inout.signup')}</ButtonText>\n              <ItemIcon />\n            </Button>\n          </InputGroupe>\n          <LinksContainer>\n            <AuthNavigate\n              forgotPasswordLink=\"/\"\n              alreadyRegisteredLink=\"/login\"\n            />\n          </LinksContainer>\n        </StyledForm>\n        <PictureWrapper>\n          <picture>\n            <source\n              type=\"image/png\"\n              media=\"(min-width: 1440px)\"\n              srcSet={`${registerElements} 1x, ${registerElementsRetina} 2x`}\n            />\n            <img\n              src={`${registerElements}`}\n              alt=\"Let go of the past and focus on the present\"\n              width={400}\n              height={416}\n            />\n          </picture>\n        </PictureWrapper>\n      </Container>\n\n      {showAnimation && (\n        <Container>\n          <ImageAnimation\n            style={{\n              position: 'absolute',\n              width: '100px',\n              height: '100px',\n              left: '50%',\n              top: '50%',\n              transform: 'translate(-50%, -50%)',\n            }}\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/RegisterForm'; // Зараз ви можете імпортувати звідси\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Text","p","_templateObject2","LinkTo","Link","_templateObject3","t","useTranslation","pathname","useLocation","_useState","useState","_useState2","_slicedToArray","activePageQuestions","setActivePageQuestions","useEffect","_jsx","Trans","i18nKey","children","concat","_jsxs","to","Container","StyledForm","form","FormName","h1","InputGroupe","_templateObject4","InputList","ul","_templateObject5","InputWrapper","li","_templateObject6","InputWrapperWithIcon","_templateObject7","Button","button","_templateObject8","ButtonText","span","_templateObject9","ItemIcon","FiLogIn","_templateObject10","ShowHideButton","_templateObject11","LinksContainer","nav","_templateObject12","Label","label","_templateObject13","Input","input","_templateObject14","props","isPassword","isEmail","Error","_templateObject15","SuccessIcon","_templateObject16","IoCheckmarkDoneCircleOutline","_templateObject17","ErrorIcon","MdErrorOutline","_templateObject18","ContainerErrorIcon","_templateObject19","PictureWrapper","_templateObject20","hide","dispatch","useDispatch","navigate","useNavigate","showPassword","setShowPassword","_useState3","_useState4","showAnimation","setShowAnimation","validationSchema","yup","name","min","required","email","matches","password","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","response","wrap","_context","prev","next","userName","setTimeout","Promise","resolve","register","sent","payload","message","resetForm","abrupt","t0","console","error","stop","_x","apply","arguments","_Fragment","style","display","handleSubmit","htmlFor","className","touched","errors","type","id","autoComplete","value","placeholder","onBlur","handleBlur","onChange","handleChange","onClick","show","FiEyeOff","FiEye","AuthNavigate","forgotPasswordLink","alreadyRegisteredLink","media","srcSet","registerElements","registerElementsRetina","src","alt","width","height","ImageAnimation","position","left","top","transform","RegisterForm"],"sourceRoot":""}